<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.29.0-wmf.3</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>C4.5 algorithm</title>
    <ns>0</ns>
    <id>1966814</id>
    <revision>
      <id>727181226</id>
      <parentid>727181134</parentid>
      <timestamp>2016-06-27T06:46:56Z</timestamp>
      <contributor>
        <ip>39.35.233.154</ip>
      </contributor>
      <comment>/* Implementations */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="5359">{{More footnotes|date=July 2008}}
'''C4.5''' is an algorithm used to generate a [[decision tree learning|decision tree]] developed by [[Ross Quinlan]].&lt;ref&gt;Quinlan, J. R. C4.5: Programs for Machine Learning. Morgan Kaufmann Publishers, 1993.&lt;/ref&gt; C4.5 is an extension of Quinlan's earlier [[ID3 algorithm]]. The decision trees generated by C4.5 can be used for classification, and for this reason, C4.5 is often referred to as a [[Statistical classification|statistical classifier]].

It became quite popular after ranking #1 in the ''Top 10 Algorithms in Data Mining'' pre-eminent paper published by [[Springer Science+Business Media|Springer]] [[Lecture Notes in Computer Science|LNCS]] in 2008.&lt;ref&gt;[http://www.cs.umd.edu/~samir/498/10Algorithms-08.pdf Umd.edu - Top 10 Algorithms in Data Mining]&lt;/ref&gt;

==Algorithm==
C4.5 builds decision trees from a set of training data in the same way as [[ID3 algorithm|ID3]], using the concept of [[Entropy (information theory)|information entropy]].  The training data is a set &lt;math&gt;S = {s_1, s_2, ...}&lt;/math&gt; of already classified samples.  Each sample &lt;math&gt; s_i&lt;/math&gt; consists of a p-dimensional vector &lt;math&gt;(x_{1,i}, x_{2,i}, ...,x_{p,i}) &lt;/math&gt;, where the &lt;math&gt; x_j &lt;/math&gt; represent attribute values or features of the sample, as well as the class in which &lt;math&gt; s_i &lt;/math&gt; falls.

At each node of the tree, C4.5 chooses the attribute of the data that most effectively splits its set of samples into subsets enriched in one class or the other.  The splitting criterion is the normalized [[information gain]] (difference in [[Entropy (information theory)|entropy]]). The attribute with the highest normalized information gain is chosen to make the decision.  The C4.5 algorithm then recurs on the smaller sublists.

This algorithm has a few base cases.
*All the samples in the list belong to the same class.  When this happens, it simply creates a leaf node for the decision tree saying to choose that class.
*None of the features provide any information gain.  In this case, C4.5 creates a decision node higher up the tree using the expected value of the class.
*Instance of previously-unseen class encountered.  Again, C4.5 creates a decision node higher up the tree using the expected value.

===Pseudocode===

In [[pseudocode]], the general algorithm for building decision trees is:&lt;ref&gt;S.B. Kotsiantis, Supervised Machine Learning: A Review of Classification Techniques, Informatica 31(2007) 249-268, 2007&lt;/ref&gt;

#Check for the above base cases.
#For each attribute ''a'', find the normalized information gain ratio from splitting on ''a''.
#Let ''a_best'' be the attribute with the highest normalized information gain.
#Create a decision ''node'' that splits on ''a_best''.
#Recur on the sublists obtained by splitting on ''a_best'', and add those nodes as children of ''node''.

==Implementations==
'''J48''' is an [[open source]] [[Java (programming language)|Java]] implementation of the C4.5 algorithm in the [[Weka (machine learning)|Weka]] [[data mining]] tool.

==Improvements from ID.3 algorithm==

C4.5 made a number of improvements to ID3.  Some of these are:

* Handling both continuous and discrete attributes - In order to handle continuous attributes, C4.5 creates a threshold and then splits the list into those whose attribute value is above the threshold and those that are less than or equal to it.&lt;ref&gt;J. R. Quinlan. Improved use of continuous attributes in c4.5. Journal of Artificial Intelligence Research, 4:77-90, 1996.
&lt;/ref&gt;
* Handling training data with missing attribute values - C4.5 allows attribute values to be marked as ? for missing.  Missing attribute values are simply not used in gain and entropy calculations.
* Handling attributes with differing costs.
* Pruning trees after creation - C4.5 goes back through the tree once it's been created and attempts to remove branches that do not help by replacing them with leaf nodes.

==Improvements in C5.0/See5 algorithm==
{{POV-section|date=August 2011}}

Quinlan went on to create C5.0 and See5 (C5.0 for Unix/Linux, See5 for Windows) which he markets commercially.  C5.0 offers a number of improvements on C4.5. Some of these are:&lt;ref&gt;[http://www.rulequest.com/see5-comparison.html Is See5/C5.0 Better Than C4.5?]&lt;/ref&gt;&lt;ref&gt;M. Kuhn and K. Johnson, Applied Predictive Modeling, Springer 2013&lt;/ref&gt;

* Speed - C5.0 is significantly faster than C4.5 (several orders of magnitude)
* Memory usage - C5.0 is more memory efficient than C4.5
* Smaller decision trees - C5.0 gets similar results to C4.5 with considerably smaller decision trees.
* Support for [[Boosting (meta-algorithm)|boosting]] - Boosting improves the trees and gives them more accuracy.
* Weighting - C5.0 allows you to weight different cases and misclassification types.
* Winnowing - a C5.0 option automatically [[Winnow (algorithm)|winnow]]s the attributes to remove those that may be unhelpful.

Source for a single-threaded Linux version of C5.0 is available under the GPL.

== See also ==
* [[ID3 algorithm]]

==References==

&lt;references /&gt;

==External links==
* Original implementation on Ross Quinlan's homepage:  [http://www.rulequest.com/Personal/ http://www.rulequest.com/Personal/]
* [http://www.rulequest.com/see5-info.html See5 and C5.0]

{{DEFAULTSORT:C4.5 Algorithm}}
[[Category:Classification algorithms]]
[[Category:Decision trees]]</text>
      <sha1>0evumqv295ezbtohp16awuxxrynyma3</sha1>
    </revision>
  </page>
</mediawiki>
