<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.28.0-wmf.22</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
      <namespace key="2600" case="first-letter">Topic</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Wide character</title>
    <ns>0</ns>
    <id>1063614</id>
    <revision>
      <id>695545450</id>
      <parentid>678260645</parentid>
      <timestamp>2015-12-16T20:55:57Z</timestamp>
      <contributor>
        <username>Intgr</username>
        <id>246230</id>
      </contributor>
      <comment>Remove low-quality source &amp; probable [[WP:REFSPAM]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="6791">{{for|double-wide (CJK ideograph-sized) variations of ASCII characters|Halfwidth and fullwidth forms}}
{{Refimprove|date=February 2011}}
A '''wide character''' is a computer [[character (computing)|character]] [[datatype]] that generally has a size greater than the traditional [[8-bit]] character.  The increased datatype size allows for the use of larger coded [[Character encoding|character sets]].

==History==
During the 1960s, mainframe and mini-computer manufacturers began to standardize around the 8-bit [[byte]] as their smallest datatype.  The 7-bit [[ASCII]] character set became the industry standard method for encoding [[alphanumeric]] characters for [[teleprinter|teletype machines]] and [[computer terminal]]s. The extra bit was used for parity, to ensure the integrity of data storage and transmission.  As a result, the 8-bit byte became the [[de facto]] datatype for computer systems storing ASCII characters in memory.

Later, computer manufacturers began to make use of the spare bit to extend the ASCII character set beyond its limited set of [[English alphabet]] characters.  [[Extended ASCII|8-bit extensions]] such as [[EBCDIC 037|IBM code page 37]], [[PETSCII]] and [[ISO/IEC 8859|ISO 8859]] became commonplace, offering terminal support for [[Greek alphabet|Greek]], [[Cyrillic script|Cyrillic]], and many others.  However, such extensions were still limited in that they were region specific and often could not be used in tandem.  Special conversion routines had to be used to convert from one character set to another, often resulting in destructive translation when no equivalent character existed in the target set.

In 1989, the [[International Organization for Standardization]] began work on the [[Universal Character Set]] (UCS), a multilingual character set that could be encoded using either a 16-bit (2-byte) or 32-bit (4-byte) value.  These larger values required the use of a datatype larger than 8-bits to store the new character values in memory.  Thus the term wide character was used to differentiate them from traditional 8-bit character datatypes.

==Relation to UCS and Unicode==
A wide character refers to the size of the datatype in memory.  It does not state how each value in a character set is defined.  Those values are instead defined using character sets, with [[Universal Character Set|UCS]] and [[Unicode]] simply being two common character sets that contain more characters than an 8-bit value would allow.

==Relation to multibyte characters==
Just as earlier data transmission systems suffered from the lack of an [[8-bit clean]] data path, modern transmission systems often lack support for 16-bit or 32-bit data paths for character data.  This has led to character encoding systems such as [[UTF-8]] that can use [[variable-width encoding|multiple bytes]] to encode a value that is too large for a single 8-bit symbol.

The [[C (programming language)|C]] standard distinguishes between ''multibyte'' encodings of characters, which use a fixed or variable number of bytes to represent each character (primarily used in source code and external files), from ''wide characters'', which are [[Run time (program lifecycle phase)|run-time]] representations of characters in single objects (typically, greater than 8 bits).

==Size of a wide character==
UTF-16 little-endian is the encoding standard at Microsoft (and in the Windows operating system). Yet with surrogate pairs it supports 32-bit as well.&lt;ref&gt;http://msdn.microsoft.com/en-us/goglobal/bb688113.aspx&lt;/ref&gt;  The [[.Net Framework]] platform supports multiple wide-character implementations including UTF7, UTF8, UTF16 and UTF32.&lt;ref&gt;https://msdn.microsoft.com/en-us/library/System.Text.aspx&lt;/ref&gt;

The [[Java (software platform)|Java]] platform requires that wide character variables be defined as 16-bit values, and that characters be encoded using [[UTF-16]] (due to former use of UCS-2), while modern [[Unix]]-like systems generally require 32-bit values encoded using [[UTF-32]].{{Citation needed|date=May 2012}}

==Programming specifics==

===C/C++===
The [[C Standard Library|C]] and [[C++ Standard Library|C++]] standard libraries include [[C string handling|a number of facilities]] for dealing with wide characters and strings composed of them. The wide characters are defined using datatype &lt;code&gt;wchar_t&lt;/code&gt;, which in the original C90 standard was defined as

: &quot;an integral type whose range of values can represent distinct codes for all members of the largest extended character set specified among the supported locales&quot; (ISO 9899:1990 ยง4.1.5)

Both C and [[C++]] introduced fixed-size character types &lt;code&gt;char16_t&lt;/code&gt; and &lt;code&gt;char32_t&lt;/code&gt; in the 2011 revisions of their respective standards to provide unambiguous representation of 16-bit and 32-bit Unicode transformation formats, leaving &lt;code&gt;wchar_t&lt;/code&gt; implementation-defined. The ISO/IEC 10646:2003 Unicode standard 4.0 says that:

:&quot;The width of &lt;code&gt;wchar_t&lt;/code&gt; is compiler-specific and can be as small as 8 bits. Consequently, programs that need to be portable across any C or C++ compiler should not use &lt;code&gt;wchar_t&lt;/code&gt; for storing Unicode text. The &lt;code&gt;wchar_t&lt;/code&gt; type is intended for storing compiler-defined wide characters, which may be Unicode characters in some compilers.&quot;

===Python===
According to [[Python (programming language)|Python]]'s documentation, the language sometimes uses &lt;code&gt;wchar_t&lt;/code&gt; as the basis for its character type &lt;code&gt;Py_UNICODE&lt;/code&gt;. It depends on whether &lt;code&gt;wchar_t&lt;/code&gt; is &quot;compatible with the chosen Python Unicode build variant&quot; on that system.&lt;ref&gt;https://docs.python.org/c-api/unicode.html accessed 2009 12 19&lt;/ref&gt;

== References ==
{{reflist}}

==External links==
{{Sister project links}}
* [http://unicode.org/versions/Unicode4.0.0/ch05.pdf The Unicode Standard, Version 4.0 - online edition]
* [http://www.java2s.com/Tutorial/C/0300__Wide-Character-String/WideCharacterFunctions.htm C Wide Character Functions @ Java2S]
* [http://www.java2s.com/Tutorial/Java/0120__Development/0240__Unicode.htm Java Unicode Functions @ Java2S]
* [http://www.freebsd.org/cgi/man.cgi?query=multibyte&amp;apropos=0&amp;sektion=0&amp;format=html Multibyte (3) Man Page @ FreeBSD.org]
* [https://msdn.microsoft.com/en-us/library/z207t55f%28VS.100%29.aspx Multibyte and Wide Characters @ Microsoft Developer Network]
* [https://msdn.microsoft.com/en-us/library/dd317743%28VS.85%29.aspx Windows Character Sets @ Microsoft Developer Network]
* [https://msdn.microsoft.com/en-us/library/dd374087%28VS.85%29.aspx Unicode and Character Set Programming Reference @ Microsoft Developer Network]

{{use dmy dates|date=January 2012}}

{{DEFAULTSORT:Wide Character}}
[[Category:Character encoding]]
[[Category:C (programming language)]]
[[Category:C++]]</text>
      <sha1>7v3k10erozn8pbndbfwdjwcqjp28iok</sha1>
    </revision>
  </page>
</mediawiki>
