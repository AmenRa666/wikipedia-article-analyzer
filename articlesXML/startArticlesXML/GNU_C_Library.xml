<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.29.0-wmf.3</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>GNU C Library</title>
    <ns>0</ns>
    <id>324364</id>
    <revision>
      <id>749913851</id>
      <parentid>745357740</parentid>
      <timestamp>2016-11-16T20:55:25Z</timestamp>
      <contributor>
        <username>Alexey Izbyshev</username>
        <id>10032441</id>
      </contributor>
      <minor/>
      <comment>/* History */ Fix name of 64-bit ARM architecture</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="20414">{{Redirect-distinguish|glibc|GLib|Gnulib}}
{{Use dmy dates|date=July 2013}}
{{Infobox software
| name                 = GNU C Library
| logo                 = Heckert GNU white.svg
| author               = Roland McGrath
| developer            = [[GNU Project]]
| released             = {{start date and age|1987}}&lt;ref&gt;{{cite web|url=https://lwn.net/Articles/488847/|title=A turning point for GNU libc|last=Corbet|first=Jonathan|date=28 March 2012|publisher=LWN.net}}&lt;/ref&gt;
| status               = Active
| programming language = [[C (programming language)|C]]
| operating system     = [[Unix-like]]
| genre                = [[Runtime library]]
| license              = [[GNU Lesser General Public License]]
| website              = {{url|https://www.gnu.org/software/libc/}}
}}
[[File:Linux API.svg|thumb|The '''[[Linux API]]''' is composed out of the System Call Interface of the Linux kernel, the GNU C Library (by [[GNU]]), [[Direct Rendering Manager|libdrm]], [[Advanced Linux Sound Architecture|libalsa]] and [[evdev|libevdev]] (by [[freedesktop.org]]).]]
[[File:Linux kernel System Call Interface and glibc.svg|thumb|The '''GNU C Library''' is a wrapper around the [[system call]]s of the [[Linux kernel]].]]
[[File:Linux API and Linux ABI.svg|thumb|The [[Linux kernel]] and '''GNU C Library''' together form the [[Linux kernel interfaces#Kernel–user space API|Linux API]]. After compilation, the binaries offer an [[Application binary interface|ABI]].]]
The '''GNU C Library''', commonly known as '''glibc''', is the [[GNU Project]]'s implementation of the [[C standard library]]. Despite its name, it now also directly supports [[C++]] (and, indirectly, other [[programming languages]]). It was started in the early 1990s by the [[Free Software Foundation]] (FSF) for their [[GNU]] operating system.

Released under the [[GNU Lesser General Public License]], glibc is [[free software]].

== History ==
The Glibc project was initially written mostly by Roland McGrath, working for the [[Free Software Foundation]] (FSF) in the 1980s.

In February 1988, FSF described glibc as having nearly completed the functionality required by [[ANSI C]].&lt;ref&gt;{{cite web | url = https://www.gnu.org/bulletins/bull4.html | title = GNU's Bulletin, vol. 1 no. 4, February, 1988 | quote = Most libraries are done. Roland McGrath […] has a nearly complete set of ANSI C library functions. We hope they will be ready some time this spring. }}&lt;/ref&gt; By 1992, it had the ANSI C-1989 and POSIX.1-1990 functions implemented and work was under way on POSIX.2.&lt;ref&gt;{{cite web | url = https://www.gnu.org/bulletins/bull12.html | title = GNU's Bulletin, vol. 1 no. 12 | quote = It now contains all of the ANSI C-1989 and POSIX.1-1990 functions, and work is in progress on POSIX.2 and Unix functions (BSD and System V) }}&lt;/ref&gt;

=== Fork &quot;Linux libc&quot; ===
In the early 1990s, the developers of the [[Linux kernel]] [[fork (software development)|forked]] glibc. Their fork, called &quot;Linux libc&quot;, was maintained separately for years and released versions 2 through 5.

When FSF released glibc 2.0 in January 1997, it had much more complete POSIX standards compliance, better [[internationalisation]] and multilingual function, [[IPv6]] capability, 64-bit data access, facilities for multithreaded applications, future version compatibility, and the code was more portable.&lt;ref&gt;{{cite web | url = http://people.redhat.com/~sopwith/old/glibc-vs-libc5.html  | title = A Technical Comparison of glibc 2.x With Legacy System Libraries| last = Lee | first = Elliot | year = 2001 |archiveurl = https://web.archive.org/web/20040411191201/http://people.redhat.com/~sopwith/old/glibc-vs-libc5.html |archivedate = 11 April 2004}}&lt;/ref&gt; At this point, the Linux kernel developers discontinued their fork and returned to using FSF's glibc.&lt;ref&gt;{{cite web | url = http://www.linux.com/archive/feature/3874 | title = Forking: it could even happen to you | quote = the split between GNU LIBC and the Linux LIBC -- it went on for years while Linux stabilized, and then the forks re-merged into one project }}&lt;/ref&gt;

The last used version of Linux libc used the internal name ([[soname]]) &lt;tt&gt;libc.so.5&lt;/tt&gt;. Following on from this, glibc 2.x on Linux uses the soname &lt;tt&gt;libc.so.6&lt;/tt&gt;&lt;ref&gt;{{cite web | url = http://linuxmafia.com/faq/Licensing_and_Law/forking.html | title = Fear of Forking essay, see &quot;6. glibc --&gt; Linux libc --&gt; glibc&quot; }}&lt;/ref&gt; ([[DEC Alpha|Alpha]] and [[Itanium|IA64]] architectures now use &lt;tt&gt;libc.so.6.1&lt;/tt&gt;, instead). The *.so file name is often abbreviated as libc6 (for example in the package name in [[Debian]]) following the normal conventions for libraries.

According to [[Richard Stallman]], the changes that had been made in Linux libc could not be merged back into glibc because the authorship status of that code was unclear and the GNU project is quite strict about recording copyright and authors.&lt;ref&gt;{{cite web | url = http://linuxmafia.com/faq/Licensing_and_Law/forking.html#foot25 | title = Fear of Forking, footnote on Stallman's merge comments }}&lt;/ref&gt;

=== Installation of a steering committee ===
Starting in 2001 the library's development had been overseen by a committee,&lt;ref&gt;{{cite web|url=https://www.gnu.org/software/libc/ |title=glibc homepage |quote=In 2001 The GNU C Library Steering Committee …, was formed and currently consists of Mark Brown, Paul Eggert, Andreas Jaeger, Jakub Jelinek, Roland McGrath and Andreas Schwab.}}&lt;/ref&gt; with Ulrich Drepper&lt;ref&gt;{{cite web|url=http://www.linkedin.com/in/ulrichdrepper |title=Ulrich Drepper |publisher=LinkedIn |date= |accessdate=2012-06-13}}&lt;/ref&gt; kept as the lead contributor and maintainer. The [[steering committee]] installation was surrounded by a public controversy as it was openly described by Ulrich Drepper as failed [[hostile takeover]] maneuver by [[Richard Stallman|RMS]].&lt;ref&gt;{{cite web|url=https://sourceware.org/ml/libc-hacker/2000-06/msg00180.html|title=RMS is at it again|first=Ulrich|last=Drepper|date=2000-06-26 |accessdate=2015-11-20 |quote=''A few weeks ago RMS started the next attack on me (a single mail, followed by indirect tries to take influence, followed by another mail today). The essence is that he complains I am not following &quot;GNU policies&quot; and therefore have to be replaced by a steering committee of which I could be a part.  Some of you (namely Roland and Andreas S.) probably know about this since he proposed both as other members of the committee. In addition there was Mark Brown listed (I know somebody of this name at IBM who would also fit in this group but I'm not sure whether it is really him.) Anyhow, I completely reject this.  It is not helping at all, the opposite is true.  First, I am not aware of any essential policies I'm violating.  The only ones are that I'm not following orders from RMS which clearly have political intends (which is of course a sacrilege) and possibly that I do not care about Winblowz (if the latter counts at all).  None of this will change in any way.''|publisher=sourceware.org}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=https://sourceware.org/ml/libc-announce/2001/msg00000.html| title=glibc 2.2.4 |first=Ulrich |last=Drepper |date=2001-08-15 |accessdate=2015-11-29 |publisher=sourceware.com |quote=''And now for some not so nice things. Stallman recently tried what I would call a hostile takeover of the glibc development. He tried to conspire behind my back and persuade the other main developers to take control so that in the end he is in control and can dictate whatever pleases him.  This attempt failed but he kept on pressuring people everywhere and it got really ugly.  In the end I agreed to the creation of a so-called &quot;steering committee&quot; (SC).''}}&lt;/ref&gt;&lt;ref&gt;[http://slashdot.org/story/01/08/19/2039211/rms-accused-of-attempting-glibc-hostile-takeover rms-accused-of-attempting-glibc-hostile-takeover] on [[slashdot]].com on August 19, 2001&lt;/ref&gt;

=== Migrated to Git, a distributed VCS ===
While previously in a [[Concurrent Versions System|CVS]] repository, in 2009 glibc was migrated to a [[Git (software)|Git]] (a distributed version control system) repository on ''Sourceware''.&lt;ref&gt;[https://sourceware.org/glibc/wiki/GlibcGit glibc repo] on Sourceware.com&lt;/ref&gt;

=== Debian switches to EGLIBC and back ===
After long standing controversies around Drepper's leading style and external contribution acceptance,&lt;ref&gt;[http://sourceware.org/bugzilla/show_bug.cgi?id=5070#c5  Ulrich Drepper 2007-10-03 06:13:55 UTC] &quot;This has nothing to do with &quot;x86 only&quot;. All ABIs designed by people who have a bit of understanding require no change.  Any change will negatively impact well designed architectures for the sole benefit of this embedded crap.  But your own version of the file in the add-on.&quot;&lt;/ref&gt;&lt;ref name=&quot;drepper&quot;&gt;{{cite web|url=http://udrepper.livejournal.com/7326.html|title=Dictatorship of the Minorities |first=Ulrich |last=Drepper |date=2005-05-25 |accessdate=2012-01-15|quote=''Which architectures are worthwhile supporting? […]. Not only do we have to look for irrelevance (what percentage cares about Vax, PArisc) support, we also have to look at the level of added complexity the support requires. Some ABIs are just deliberately defined to be different from others (see IA-64) which requires huge amounts of effort to be spent. There are also significantly diverging capabilities (e.&amp;nbsp;g., the lack of atomic operations in too many architectures). This far too often causes to unnecessarily crippled code since writing code in a way which allows optimal use in all situations is very difficult. The solution must be to restrict support to only a handful of architectures which are supported in the project. All other support must happen outside the tree and therefore all the work has to be done by the special interest groups. I don't want to say we follow all these points perfectly, but for a big project glibc certainly comes closest to this.''|publisher=udrepper.livejournal.com }}&lt;/ref&gt;&lt;ref name=&quot;aur&quot;&gt;{{cite web|url=http://blog.aurel32.net/?p=47 |title=Debian is switching to EGLIBC|quote=''More friendly upstream (especially with regard to embedded architectures): “Encourage cooperation, communication, civility, and respect among developers” (as opposed to this).'' |first=Aurélien |last=Jarno |accessdate=2012-01-15 |date=2009-05-05 |publisher=aurel32.net}}&lt;/ref&gt; [[Debian]] switched publicly to the glibc fork [[EGLIBC]] in 2009,&lt;ref&gt;{{cite web|url=http://linux.slashdot.org/story/09/05/06/2050216/debian-switching-from-glibc-to-eglibc|title=Debian Switching From Glibc To Eglibc |author=timothy |date=2009-05-06|accessdate=2012-01-14|publisher=[[Slashdot]]}}&lt;/ref&gt; and back with the Debian 8.0 (Jessie) in April 2015.&lt;ref&gt;[http://metadata.ftp-master.debian.org/changelogs/main/g/glibc/stable_changelog Debian package changelog]&lt;/ref&gt;

=== Steering committee disbands ===
In March 2012, the steering committee voted to disband itself and remove Drepper in favor of a community-driven development process, with Ryan Arnold, Maxim Kuvyrkov, Joseph Myers, Carlos O'Donell, and [[Alexandre Oliva]] holding the responsibility of GNU maintainership (but no extra decision-making power).&lt;ref&gt;{{cite web|url=http://sourceware.org/ml/libc-alpha/2012-03/msg01038.html |last=McGrath |first=Roland |title=glibc steering committee dissolving |publisher=Sourceware.org |date=26 March 2012 |accessdate=2012-06-13}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://sourceware.org/ml/libc-alpha/2012-03/msg01040.html |last=Myers |first=Joseph S. |title=GNU C Library development and maintainers |publisher=Sourceware.org |date=26 March 2012 |accessdate=2012-06-13}}&lt;/ref&gt;

After the change in glibc maintainership Debian and other projects migrated back to the glibc, who before switched to alternatives.&lt;ref&gt;{{cite web|url=http://blog.aurel32.net/175|title=Debian is switching (back) to GLIBC|date=2014-06-19|accessdate=2014-06-19|publisher=Aurélien }}&lt;/ref&gt; Also, since the beginning of 2014, the glibc fork EGLIBC is no longer being developed, since its ''&quot;goals are now being addressed directly in GLIBC&quot;''.

=== Version history ===
For most systems, the version of glibc can be obtained by executing the lib file (for example, /lib/libc.so.6).
&lt;!---This version history uses dates from the ChangeLog files packaged in the 2.13 release.---&gt;
{| class=&quot;wikitable collapsible collapsed&quot;
|-
! Version !! Date !! Notes !! Adoption
|-
| 0.1 – 0.6 || October 1991 – February 1992 || ||
|-
| 1.0 || February 1992 || ||
|-
| 1.01 – 1.09.3 || March 1992 – December 1994 || ||
|-
| 1.90 – 1.102 || May 1996 – January 1997 || ||
|-
| 2.0 || January 1997 || ||
|-
| 2.0.1 || January 1997 || ||
|-
| 2.0.2 || February 1997 || ||
|-
| 2.0.91 || December 1997 || ||
|-
| 2.0.95 || July 1998 || ||
|-
| 2.1 || February 1999 || ||
|-
| 2.1.1 || March 1999 || ||
|-
| 2.2 || November 2000 || ||
|-
| 2.2.1 || January 2001 || ||
|-
| 2.2.2 || February 2001 || ||
|-
| 2.2.3 || March 2001 || ||
|-
| 2.2.4 || July 2001 || ||
|-
| 2.3 || October 2002 || ||
|-
| 2.3.1 || October 2002 || ||
|-
| 2.3.2 || February 2003 || || [[Debian]] 3.1 (Sarge)
|-
| 2.3.3 || December 2003 || ||
|-
| 2.3.4 || December 2004 || Standard for [[Linux Standard Base]] (LSB) 3.0 || [[Red Hat Enterprise Linux|RHEL 4 (Update 5)]]
|-
| 2.3.5 || April 2005 || || [[SUSE Linux Enterprise Server|SLES 9]]
|-
| 2.3.6 || November 2005 || || [[Debian]] 4.0 (Etch)
|-
| 2.4 || March 2006 || Standard for [[Linux Standard Base|LSB 4.0]], initial [[inotify]] support || [[SUSE Linux Enterprise Server|SLES 10]]
|-
| 2.5 || September 2006 || Full [[inotify]] support || [[Red Hat Enterprise Linux|RHEL 5]]
|-
| 2.6 || May 2007 || ||
|-
| 2.7 || October 2007 || || [[Debian]] 5 (Lenny), [[Ubuntu (operating system)|Ubuntu]] 8.04
|-
| 2.8 || April 2008 || ||
|-
| 2.9 || November 2008 || ||
|-
| 2.10 || May 2009 || ||
|-
| 2.11 || October 2009 || || [[SUSE Linux Enterprise Server|SLES 11]], [[Ubuntu (operating system)|Ubuntu]] 10.04, [[eglibc]] used in [[Debian]] 6 (Squeeze)
|-
| 2.12 || May 2010 || ||  [[Red Hat Enterprise Linux|RHEL 6]]
|-
| 2.13 || January 2011 || || [[eglibc]] 2.13 used in [[Debian]] 7 (Wheezy)
|-
| 2.14 || June 2011 || ||
|-
| 2.15 || March 2012 || || [[Ubuntu (operating system)|Ubuntu]] 12.04 and 12.10
|-
| 2.16 || June 2012 || [[x32 ABI]] support, [[C11 (C standard revision)|ISO C11]] compliance, [[SystemTap]] ||
|-
| 2.17 || December 2012 || [[ARMv8-A|64-bit ARM]] support || [[Ubuntu (operating system)|Ubuntu]] 13.04, [[Red Hat Enterprise Linux|RHEL 7]]
|-
| 2.18 || August 2013 || Improved [[C++11]] support. Support for Intel [[Transactional Synchronization Extensions|TSX]] lock elision. Support for the Xilinx [[MicroBlaze]] and IBM [[POWER8]] microarchitectures. || Fedora 20
|-
| 2.19 || February 2014 || SystemTap probes for [[malloc]]. GNU Indirect Function (IFUNC) support for ppc32 and ppc64. New feature test macro _DEFAULT_SOURCE to replace _SVID_SOURCE and _BSD_SOURCE. Preliminary safety documentation for all functions in the manual. ABI change in ucontext and jmp_buf for s390/s390x. || [[Ubuntu (operating system)|Ubuntu]] 14.04, [[eglibc]] 2.19 used in [[Debian]] 8 (Jessie), [[OpenSUSE|openSUSE 13]], [[SUSE Linux Enterprise Server|SLES 12]]
|-
| 2.20 || September 2014 || Support for file description locks || Fedora 21
|-
| 2.21 || February 2015 || New semaphore implementation || [[Ubuntu (operating system)|Ubuntu]] 15.04, Debian experimental, Fedora 22
|-
| 2.22 || August 2015 || Support to enable [[Google Native Client]] (NaCl), that originally ran on x86, running on [[ARMv7-A]], [[Unicode]] 7.0 || Fedora 23
|-
| 2.23 || February 2016 || [[Unicode]] 8.0 || Fedora 24, Ubuntu 16.04
|-
| 2.24 || August 2016 || Some deprecated features have been removed ||
|}

== Functionality ==
glibc provides the functionality required by the [[Single UNIX Specification]], [[POSIX]] (1c, 1d, and 1j) and some of the functionality required by [[International Organization for Standardization|ISO]] [[C11 (C standard revision)|C11]], [[International Organization for Standardization|ISO]] [[C99]], [[Berkeley Unix]] (BSD) interfaces, the [[System V Interface Definition]] (SVID) and the [[X/Open Portability Guide]] (XPG), Issue 4.2, with all extensions common to XSI ([[X/Open System Interface]]) compliant systems along with all X/Open UNIX extensions.

In addition, glibc also provides extensions that have been deemed useful or necessary while developing [[GNU]].

=== Supported hardware and kernels ===
Glibc is used in systems that run many different [[kernel (computer science)|kernels]] and different [[Computer hardware|hardware]] architectures. Its most common use is in systems using the [[Linux kernel]] on [[x86]] hardware, however, officially supported hardware&lt;ref&gt;{{cite web | url = https://sourceware.org/glibc/wiki/MAINTAINERS#Machine_maintainers | title = The GNU C Library machine maintainers.}}&lt;/ref&gt; includes: [[ARM architecture|32-bit ARM and its newer 64-bit ISA (AArch64)]], [[DEC Alpha]], [[PA-RISC]], [[IA-64]], [[Motorola 68000 series|Motorola m68k]], [[MicroBlaze]], [[MIPS instruction set|MIPS]], [[Nios II]], [[PowerPC]], [[IBM System z|s390]], [[SPARC]], [[TILE64|TILE]], and [[x86]]. It officially supports the [[GNU Hurd|Hurd]] and [[Linux kernel|Linux]] kernels. Additionally, there are heavily patched versions that run on the kernels of [[FreeBSD]] and [[NetBSD]] (from which [[Debian gnu/kfreebsd|Debian GNU/kFreeBSD]] and [[Debian GNU/NetBSD]] systems are built, respectively), as well as a forked-version of [[OpenSolaris]].&lt;ref&gt;{{cite web|url=http://csclub.uwaterloo.ca/~dtbartle/opensolaris/|title=GNU/kOpenSolaris (GNU libc/base + OpenSolaris kernel)|last1=Bartley|first1=David|last2=Spang|first2=Michael|accessdate=2008-12-16}}&lt;/ref&gt; It is also used (in an edited form) and named &lt;tt&gt;libroot.so&lt;/tt&gt; in [[BeOS]] and [[Haiku (operating system)|Haiku]].&lt;ref&gt;{{cite web
|url=https://github.com/haiku/haiku/tree/master/src/system/libroot
|title=Haiku Source
|quote=libroot.so is not part of GNU project and is included in Haiku source code.
}}&lt;/ref&gt;

=== Use in small devices ===
glibc has been criticized as being &quot;bloated&quot; and slower than other libraries in the past, e.g. by [[Linus Torvalds]]&lt;ref&gt;{{cite web|last=Torvalds|first=Linus|url=http://ecos.sourceware.org/ml/libc-alpha/2002-01/msg00079.html|title=Posting to the glibc mailing list|date=9 January 2002&lt;!-- 19:02:37--&gt;}}&lt;/ref&gt; and [[embedded Linux]] programmers. For this reason, several [[C standard library#Implementations|alternative C standard libraries]] have been created which emphasize a smaller footprint. However, many small-device projects use GNU libc over the smaller alternatives because of its application support, standards compliance, and completeness.  Examples include [[Openmoko]]&lt;ref&gt;{{cite web
|url=http://wiki.openmoko.org/wiki/OpenMoko
|title=OpenMoko components
|quote=We will use glibc (not uClibC) … The alternatives may save more space and be more optimized, but are more likely to give us integration headaches
}}&lt;/ref&gt; and [[Familiar Linux]] for iPaq handhelds (when using the [[GPE]] display software).&lt;ref&gt;{{cite web
|url=http://marc.info/?l=familiar&amp;m=118666899424374&amp;w=2
|title=Re: &amp;#x5B;Familiar&amp;#x5D; Which glibc for Familiar 0.8.4  ?
|quote=Question: which version of the GLIBC was used to build the Familiar 0.8.4 ? Answer: 2.3.3
}}&lt;/ref&gt;

== Compatibility layers ==
There are [[compatibility layer]]s (&quot;[[Shim (computing)|shims]]&quot;) to allow programs written for other ecosystems, e.g. [[Google]]'s [[Android (OS)|Android]] and [[Microsoft]]'s [[Windows]], to run on glibc interface offering systems. [[Hybris (software)|libhybris]] is a compatibility layer for Android's [[Bionic (software)|Bionic]] and [[Wine (software)|Wine]] can be also seen as compatibility layer from [[Win32 API]]/ABI to glibc.

== See also ==
{{Portal|Free software}}
* [[Gnulib]]
* [[Linux kernel API]]

== References ==
{{Reflist|30em}}

== External links ==
{{Commons category|GNU C Library}}
* [https://www.gnu.org/software/libc/ GNU libc homepage]
* [https://www.gnu.org/software/libc/development.html GNU libc developers' page]

{{GNU}}
{{CProLang|state=expanded}}

[[Category:C standard library]]
[[Category:Cross-platform free software]]
[[Category:Free computer libraries]]
[[Category:Free software programmed in C]]
[[Category:GNU Project software|C Library]]
[[Category:Interfaces of the Linux kernel]]
[[Category:Linux APIs]]</text>
      <sha1>qu74plsa50mmqxxkjwny7q7njw3ynh5</sha1>
    </revision>
  </page>
</mediawiki>
