<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.29.0-wmf.3</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Heartbleed</title>
    <ns>0</ns>
    <id>42443120</id>
    <revision>
      <id>743924283</id>
      <parentid>743119266</parentid>
      <timestamp>2016-10-12T01:52:06Z</timestamp>
      <contributor>
        <username>Glrx</username>
        <id>2289521</id>
      </contributor>
      <minor/>
      <comment>/* Impact */ keep original spelling</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="75618">{{other uses}}
{{Use mdy dates|date=April 2014}}
{{good article}}

[[File:Heartbleed.svg|thumb|Logo representing Heartbleed. Security company {{w|Codenomicon}} gave Heartbleed both a name and a logo, contributing to public awareness of the issue.&lt;ref&gt;{{cite web|url=http://www.kalzumeus.com/2014/04/09/what-heartbleed-can-teach-the-oss-community-about-marketing/|title=What Heartbleed Can Teach The OSS Community About Marketing|last=McKenzie|first=Patrick|date=April 9, 2014|accessdate=November 24, 2014}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://techcrunch.com/2014/04/09/heartbleed-the-first-consumer-grade-exploit/|title=Heartbleed, The First Security Bug With A Cool Logo|last=Biggs|first=John|date=April 9, 2014|website=[[TechCrunch]]|accessdate=November 24, 2014}}&lt;/ref&gt;]]

'''Heartbleed''' is a [[security bug]] in the [[OpenSSL]] [[cryptography]] library, which is a widely used implementation of the [[Transport Layer Security]] (TLS) protocol. It was introduced into the software in 2012 and publicly disclosed in April 2014. Heartbleed may be exploited regardless of whether the party is using a vulnerable OpenSSL instance for TLS as a server or a client. It results from improper input validation (due to a missing [[bounds check]]) in the implementation of the TLS [[Heartbeat (computing)|heartbeat]] extension,&lt;ref&gt;{{cite web|url=http://kb.cyberoam.com/default.asp?id=2909&amp;Lang=1 |title=Cyberoam Security Advisory - Heartbleed Vulnerability in OpenSSL |date=April 11, 2014|accessdate=November 24, 2014}}&lt;/ref&gt; thus the bug's name derives from ''heartbeat''.&lt;ref&gt;{{cite web|url=http://gizmodo.com/how-heartbleed-works-the-code-behind-the-internets-se-1561341209 |title=How Heartbleed Works: The Code Behind the Internet's Security Nightmare |date=April 9, 2014|last1=Limer|first1=Eric|accessdate=November 24, 2014}}&lt;/ref&gt; The vulnerability is classified as a [[buffer over-read]],&lt;ref name=&quot;cve&quot;/&gt; a situation where more data can be read than should be allowed.&lt;ref&gt;{{cite web |url=http://cwe.mitre.org/data/definitions/126.html |title=CWE – CWE-126: Buffer Over-read (2.6) |publisher=Cwe.mitre.org |date=February 18, 2014 |accessdate=April 10, 2014}}&lt;/ref&gt;

Heartbleed is registered in the [[Common Vulnerabilities and Exposures]] database as CVE-2014-0160.&lt;ref name=&quot;cve&quot;&gt;{{cite web|url=https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160 |title=CVE – CVE-2014-0160 |publisher=Cve.mitre.org |date= |accessdate=April 10, 2014}}&lt;/ref&gt; The federal [[Canadian Cyber Incident Response Centre]] issued a security bulletin advising system administrators about the bug.&lt;ref&gt;{{cite web|title=OpenSSL Heartbleed Vulnerability|url=http://www.publicsafety.gc.ca/cnt/rsrcs/cybr-ctr/2014/al14-005-eng.aspx|work=Cyber Security Bulletins|publisher=Public Safety Canada|accessdate=April 14, 2014|date=April 11, 2014}}&lt;/ref&gt; A fixed version of OpenSSL was released on April 7, 2014, on the same day Heartbleed was publicly disclosed.

{{As of|2014|05|20|df=US}}, 1.5% of the 800,000 most popular TLS-enabled websites were still vulnerable to Heartbleed.&lt;ref&gt;{{cite web|url=http://www.theregister.co.uk/2014/05/20/heartbleed_still_prevalent/|accessdate=2014-05-24|title=AVG on Heartbleed: It's dangerous to go alone. Take this (an AVG tool)|work=[[The Register]]|last1=Leyden|first1=John|date=2014-05-20}}&lt;/ref&gt; 

TLS implementations other than OpenSSL, such as [[GnuTLS]], [[Mozilla Foundation|Mozilla]]'s [[Network Security Services]], and the [[Security Support Provider Interface|Windows platform implementation of TLS]], were not affected because the defect existed in the OpenSSL's implementation of TLS rather than in the protocol itself.&lt;ref&gt;{{cite web|author=Tracey Pretorius |url=http://blogs.technet.com/b/security/archive/2014/04/10/microsoft-devices-and-services-and-the-openssl-heartbleed-vulnerability.aspx |title=Microsoft Services unaffected by OpenSSL &quot;Heartbleed&quot; vulnerability |publisher=Microsoft| work=Microsoft Security Blog |date=2014-04-10 |accessdate=2014-06-07}}&lt;/ref&gt;

== History ==

The Heartbeat Extension for the [[Transport Layer Security]] (TLS) and [[Datagram Transport Layer Security]] (DTLS) protocols was proposed as a standard in February 2012 by RFC 6520.&lt;ref&gt;{{cite web|title=Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) Heartbeat Extension|url=https://tools.ietf.org/html/rfc6520|work=RFC 6520|publisher=Internet Engineering Task Force (IETF)|accessdate=April 8, 2014|author=Seggelmann, R.|date=February 2012|display-authors=etal}}&lt;/ref&gt; It provides a way to test and keep alive secure communication links without the need to renegotiate the connection each time. In 2011, one of the RFC's authors, Robin Seggelmann, then a Ph.D. student at the [[Fachhochschule Münster]], implemented the Heartbeat Extension for OpenSSL. Following Seggelmann's request to put the result of his work into OpenSSL,&lt;ref name=&quot;smh&quot;&gt;{{cite web |url=http://www.smh.com.au/it-pro/security-it/man-who-introduced-serious-heartbleed-security-flaw-denies-he-inserted-it-deliberately-20140410-zqta1.html |title=Man who introduced serious 'Heartbleed' security flaw denies he inserted it deliberately |date=April 11, 2014 |work=[[The Sydney Morning Herald]]| last=Grubb | first=Ben}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://rt.openssl.org/Ticket/Display.html?user=guest&amp;pass=guest&amp;id=2658 |title=#2658: [PATCH] Add TLS/DTLS Heartbeats |publisher=OpenSSL |year=2011}}&lt;/ref&gt;&lt;ref&gt;{{cite news |url=http://www.theglobeandmail.com/news/national/meet-the-man-that-created-the-bug-that-almost-broke-the-internet/article17941003/ |title=Meet the man who created the bug that almost broke the Internet |newspaper=Globe and Mail |date=April 11, 2014}}&lt;/ref&gt; his change was reviewed by Stephen N. Henson, one of OpenSSL's four core developers. Henson failed to notice a bug in Seggelmann's implementation, and introduced the flawed code into OpenSSL's source code repository on December 31, 2011. The flaw spread with the release of OpenSSL version 1.0.1 on March 14, 2012. Heartbeat support was enabled by default, causing affected versions to be vulnerable.&lt;ref name=&quot;hb&quot;&gt;{{cite web| title = Heartbleed Bug| date = April 8, 2014| url = http://heartbleed.com/}}&lt;/ref&gt;&lt;ref&gt;{{cite web| last = Goodin| first = Dan| title = Critical crypto bug in OpenSSL opens two-thirds of the Web to eavesdropping| work = Ars Technica| date = April 8, 2014| url = http://arstechnica.com/security/2014/04/critical-crypto-bug-in-openssl-opens-two-thirds-of-the-web-to-eavesdropping/}}&lt;/ref&gt;&lt;ref name=&quot;hbos&quot;&gt;{{cite web| title = OpenSSL &quot;Heartbleed&quot; bug: what's at risk on the server and what is not | first=Hagai|last= Bar-El | date = April 9, 2014| url = http://www.hbarel.com/openssl-heartbleed-bug}}&lt;/ref&gt;

=== Discovery ===
According to Mark J. Cox of OpenSSL, Neel Mehta of Google's security team secretly reported Heartbleed on April 1, 2014 11:09 UTC.&lt;ref&gt;{{cite web |title=Mark J Cox – #Heartbleed |url=https://plus.google.com/+MarkJCox/posts/TmCbp3BhJma |accessdate=April 12, 2014 }}&lt;/ref&gt;

The bug was named by an engineer at [[Codenomicon]], a Finnish cybersecurity company that also created the bleeding heart logo and launched the domain {{URL|http://heartbleed.com}} to explain the bug to the public.&lt;ref&gt;{{cite web|url=http://www.washingtonpost.com/blogs/style-blog/wp/2014/04/09/why-is-it-called-the-heartbleed-bug/ | title=Why is it called the 'Heartbleed Bug'?|last=Dewey|first=Caitlin|accessdate=November 25, 2014}}&lt;/ref&gt;  According to Codenomicon, Google's security team reported Heartbleed to OpenSSL first, but both Google and Codenomicon discovered it independently.&lt;ref name=&quot;hb&quot; /&gt; Codenomicon reports April 3, 2014 as their date of discovery and their date of notification of NCSC-FI for vulnerability coordination.&lt;ref name=&quot;hb&quot; /&gt;&lt;ref&gt;{{cite web|title=Näin suomalaistutkijat löysivät vakavan vuodon internetin sydämestä - transl/Finnish researchers found a serious leakage of the heart of the Internet |url = http://www.digitoday.fi/tietoturva/2014/04/10/nain-suomalaistutkijat-loysivat-vakavan-vuodon-internetin-sydamesta/20145118/66?&amp;n=2#commentsHere |date=April 10, 2014 |accessdate=April 13, 2014 }}&lt;/ref&gt;

At the time of disclosure, some 17% (around half a million) of the Internet's secure web servers certified by [[Certificate authority|trusted authorities]] were believed to be vulnerable to the attack, allowing theft of the servers' [[private key]]s and users' session cookies and passwords.&lt;ref&gt;{{cite web|url=http://news.netcraft.com/archives/2014/04/08/half-a-million-widely-trusted-websites-vulnerable-to-heartbleed-bug.html|title=Half a million widely trusted websites vulnerable to Heartbleed bug|last=Mutton|first=Paul|date=April 8, 2014|publisher=[[Netcraft|Netcraft Ltd.]]|accessdate=November 24, 2014}}&lt;/ref&gt;&lt;ref&gt;{{cite news|url=http://www.nytimes.com/2014/04/11/business/security-flaw-could-reach-beyond-websites-to-digital-devices-experts-say.html|title=Heartbleed Flaw Could Reach to Digital Devices, Experts Say|date=April 11, 2014|work=[[New York Times]]|last2=Hardy|first2=Quentin|last1=Perlroth|first1=Nicole}}&lt;/ref&gt;&lt;ref&gt;{{cite news|url=http://bits.blogs.nytimes.com/2014/04/09/qa-on-heartbleed-a-flaw-missed-by-the-masses/|title=Q. and A. on Heartbleed: A Flaw Missed by the Masses|last=Chen|first=Brian X.|date=April 9, 2014|work=[[New York Times]]}}&lt;/ref&gt;&lt;ref&gt;{{cite news|url=http://www.nytimes.com/2014/04/10/technology/flaw-calls-for-altering-passwords-experts-say.html|title=Flaw Calls for Altering Passwords, Experts Say|last=Wood|first=Molly|date=April 10, 2014|work=[[New York Times]]}}&lt;/ref&gt;&lt;ref&gt;{{cite news|url=http://www.nytimes.com/2014/04/10/technology/users-stark-reminder-as-web-grows-it-grows-less-secure.html|title=Users' Stark Reminder: As Web Grows, It Grows Less Secure|last=Manjoo|first=Farhad|date=April 10, 2014|work=[[New York Times]]}}&lt;/ref&gt; The [[Electronic Frontier Foundation]],&lt;ref&gt;{{cite web|url=https://www.eff.org/deeplinks/2014/04/why-web-needs-perfect-forward-secrecy|title=Why the Web Needs Perfect Forward Secrecy More Than Ever|last=Zhu|first=Yan|date=April 8, 2014|publisher=[[Electronic Frontier Foundation]]}}&lt;/ref&gt; [[Ars Technica]],&lt;ref&gt;{{cite web|url=http://arstechnica.com/security/2014/04/critical-crypto-bug-exposes-yahoo-mail-passwords-russian-roulette-style/|title=Critical crypto bug exposes Yahoo Mail, other passwords Russian roulette-style|last=Goodin|first=Dan|date=April 8, 2014|publisher=Ars Technica}}&lt;/ref&gt; and [[Bruce Schneier]]&lt;ref&gt;{{cite web|url=https://www.schneier.com/blog/archives/2014/04/heartbleed.html|title=Schneier on Security: Heartbleed|date=April 11, 2014|work=Schneier on Security}}&lt;/ref&gt; all deemed the Heartbleed bug ''catastrophic''. ''[[Forbes]]'' cybersecurity columnist [[Joseph Steinberg]] wrote:{{bq|Some might argue that Heartbleed is the worst vulnerability found (at least in terms of its potential impact) since commercial traffic began to flow on the Internet.&lt;ref&gt;{{cite web|url= http://www.forbes.com/sites/josephsteinberg/2014/04/10/massive-internet-security-vulnerability-you-are-at-risk-what-you-need-to-do/ |title= Massive Internet Security Vulnerability – Here's What You Need To Do |author=Joseph Steinberg |authorlink=Joseph Steinberg |work=[[Forbes]] |date=April 10, 2014}}&lt;/ref&gt;}}

A British Cabinet spokesman recommended that: {{bq|People should take advice on changing passwords from the websites they use.
 Most websites have corrected the bug and are best placed to advise what action, if any, people need to take.&lt;ref&gt;{{cite web|last=Kelion |first=Leo |url=http://www.bbc.com/news/technology-26985818 |title=BBC News - US government warns of Heartbleed bug danger |publisher=BBC |date= April 11, 2014}}&lt;/ref&gt;}} On the day of disclosure, the [[Tor (anonymity network)|Tor]] Project advised: {{bq|If you need strong anonymity or privacy on the Internet, you might want to stay away from the Internet entirely for the next few days while things settle.&lt;ref name=&quot;tor&quot;&gt;{{cite news| title = OpenSSL bug CVE-2014-0160| url = https://blog.torproject.org/blog/openssl-bug-cve-2014-0160| publisher = Tor Project| date = April 7, 2014}}&lt;/ref&gt;}}

''[[The Sydney Morning Herald]]'' published a timeline of the discovery on April 15, 2014, showing that some organizations had been able to patch the bug before its public disclosure. In some cases, it is not clear how they found out.&lt;ref&gt;{{citation|url=http://www.smh.com.au/it-pro/security-it/heartbleed-disclosure-timeline-who-knew-what-and-when-20140415-zqurk.html|work=[[The Sydney Morning Herald]]|title=Heartbleed disclosure timeline: who knew what and when|date=2014-04-14|first=Ben|last=Grubb|accessdate=November 25, 2014}}&lt;/ref&gt;

=== Bugfix and deployment ===

Bodo Moeller and Adam Langley of [[Google]] prepared the fix for Heartbleed. The resulting patch was added to [[Red Hat]]'s issue tracker on March 21, 2014.&lt;ref&gt;{{cite web|url=https://bugzilla.redhat.com/attachment.cgi?id=883475 |title=heartbeat_fix |accessdate=April 14, 2014}}&lt;/ref&gt; Stephen N. Henson applied the fix to OpenSSL's version control system on 7 April.&lt;ref name=&quot;fix&quot;/&gt; The first fixed version, 1.0.1g, was released on the same day. {{As of|2014|06|21|df=US}}, 309,197 public web servers remained vulnerable.&lt;ref&gt;{{cite web|last=Graham |first=Robert |url=http://blog.erratasec.com/2014/06/300k-vulnerable-to-heartbleed-two.html#.U6bXBWSSwyC |title=300k servers vulnerable to Heartbleed two months later |publisher=Errata Security |date=2014-06-21 |accessdate=2014-06-22}}&lt;/ref&gt;

=== Certificate renewal and revocation ===

According to [[Netcraft]], about 30,000 of the 500,000+ X.509 certificates which could have been compromised due to Heartbleed had been reissued by April 11, 2014, although fewer had been revoked.&lt;ref&gt;{{cite web|url=http://news.netcraft.com/archives/2014/04/11/heartbleed-certificate-revocation-tsunami-yet-to-arrive.html |title=Heartbleed certificate revocation tsunami yet to arrive |publisher=[[Netcraft]] |date=April 11, 2014 |accessdate=April 24, 2014}}&lt;/ref&gt;

By May 9, 2014, only 43% of affected web sites had reissued their security certificates. In addition, 7% of the reissued security certificates used the potentially compromised keys.  Netcraft stated:{{bq|By reusing the same private key, a site that was affected by the Heartbleed bug still faces exactly the same risks as those that have not yet replaced their SSL certificates.&lt;ref name=&quot;Netcraft&quot;&gt;{{cite web | url=https://news.netcraft.com/archives/2014/05/09/keys-left-unchanged-in-many-heartbleed-replacement-certificates.html | title=Keys left unchanged in many Heartbleed replacement certificates! | publisher=Netcraft | date=9 May 2014 | accessdate=11 September 2016 | author=Paul Mutton}}&lt;/ref&gt;}}
eWeek said, &quot;[Heartbleed is] likely to remain a risk for months, if not years, to come.&quot;&lt;ref&gt;{{cite web|author=Sean Michael Kerner|title=Heartbleed Still a Threat to Hundreds of Thousands of Servers|url=http://www.eweek.com/security/heartbleed-still-a-threat-to-hundreds-of-thousands-of-servers.html|work=[[eWEEK]]|date=2014-05-10}}&lt;/ref&gt;

=== Exploitation ===

The [[Canada Revenue Agency]] reported a theft of [[Social Insurance Number]]s belonging to 900 taxpayers, and said that they were accessed through an exploit of the bug during a 6-hour period on April 8, 2014.&lt;ref&gt;{{citation| title=Heartbleed bug: 900 SINs stolen from Revenue Canada|url=http://www.cbc.ca/news/business/heartbleed-bug-rcmp-asked-revenue-canada-to-delay-news-of-sin-thefts-1.2609192|date=April 14, 2014|last=Evans|first=Pete|publisher=[[CBC News]]}} Some of the details are in the video linked from the page.&lt;/ref&gt;  After the discovery of the attack, the agency shut down its website and extended the taxpayer filing deadline from April 30 to May 5.&lt;ref&gt;{{cite news|title=Canada Revenue Agency pushes tax deadline to May 5 after Heartbleed bug|url=http://www.ilstv.com/canada-revenue-agency-pushes-tax-deadline-to-may-5-after-heartbleed-bug/|accessdate=4 November 2014|date=Apr 14, 2014}}&lt;/ref&gt; The agency said it would provide anyone affected with credit protection services at no cost. On April 16, the [[Royal Canadian Mounted Police#National|RCMP]] announced they had charged an engineering student in relation to the theft with ''unauthorized use of a computer'' and ''mischief in relation to data''.&lt;ref&gt;{{cite news |url=http://www.cbc.ca/news/politics/stephen-arthuro-solis-reyes-charged-in-heartbleed-related-sin-theft-1.2612526|title=Heartbleed bug accused charged by RCMP after SIN breach|author=Thibedeau, Hannah|date=April 16, 2014| publisher=[[CBC News]]}}&lt;/ref&gt;&lt;ref&gt;{{cite news|url=http://www.bbc.com/news/technology-27058143|title=Heartbleed hack case sees first arrest in Canada|publisher=BBC News| date=April 16, 2014}}&lt;/ref&gt;

The UK parenting site [[Mumsnet]] had several user accounts hijacked, and its CEO was impersonated.&lt;ref name=bbc-mumsnet/&gt; The site later published an explanation of the incident saying it was due to Heartbleed and the technical staff patched it promptly.&lt;ref&gt;{{cite web|url=http://www.mumsnet.com/features/mumsnet-and-heartbleed-as-it-happened|title=Mumsnet and Heartbleed as it happened|publisher=[[Mumsnet]]}}&lt;/ref&gt;

Anti-malware researchers also exploited Heartbleed to their own advantage in order to access secret forums used by cybercriminals.&lt;ref&gt;{{cite web|last=Ward|first=Mark|title=Heartbleed used to uncover data from cyber-criminals|url=http://www.bbc.com/news/technology-27203766|work=BBC News|date=2014-04-29}}&lt;/ref&gt; Studies were also conducted by deliberately setting up vulnerable machines. For example, on April 12, 2014, at least two independent researchers were able to steal [[private key]]s from an experimental server intentionally set up for that purpose by [[CloudFlare]].&lt;ref&gt;{{cite web|url=http://www.engadget.com/2014/04/11/heartbleed-openssl-cloudflare-challenge/ |title=Cloudflare Challenge proves 'worst case scenario' for Heartbleed is actually possible |publisher=Engadget |last=Lawler|first= Richard |date=April 11, 2014}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=https://www.cloudflarechallenge.com/heartbleed |title=The Heartbleed Challenge |year=2014 |publisher=[[CloudFlare]]}}&lt;/ref&gt; Also, on April 15, 2014, J. Alex Halderman, a professor at [[University of Michigan]], reported that his [[Honeypot (computing)|honeypot]] server, an intentionally vulnerable server designed to attract attacks in order to study them, had received numerous attacks originating from China. Halderman concluded that because it was a fairly obscure server, these attacks were probably sweeping attacks affecting large areas of the Internet.&lt;ref&gt;{{cite web|last=Robertson|first=Jordan |url=http://www.smh.com.au/it-pro/security-it/hackers-from-china-waste-little-time-in-exploiting-heartbleed-20140416-zqvkd.html |title=Hackers from China waste little time in exploiting Heartbleed |work=[[The Sydney Morning Herald]] |date=2014-04-16}}&lt;/ref&gt;

In August 2014, it was made public that the Heartbleed vulnerability enabled hackers to steal security keys from [[Community Health Systems]], the second-biggest for-profit U.S. hospital chain in the United States, compromising the confidentiality of 4.5 million patient records. The breach happened a week after Heartbleed was first made public.&lt;ref&gt;{{cite web|url=http://time.com/3148773/report-devastating-heartbleed-flaw-was-used-in-hospital-hack/|title=Time Magazine: Report: Devastating Heartbleed Flaw Was Used in Hospital Hack|author=Sam Frizell|accessdate=October 7, 2014}}&lt;/ref&gt;

==== Possible prior knowledge and exploitation ====

Many major web sites patched the bug or disabled the Heartbeat Extension within days of its announcement,&lt;ref&gt;{{cite web|last=Cipriani |first=Jason |url=http://www.cnet.com/how-to/which-sites-have-patched-the-heartbleed-bug/ |title=Heartbleed bug: Check which sites have been patched |publisher=CNET |date=April 9, 2014 }}&lt;/ref&gt; but it is unclear whether potential attackers were aware of it earlier and to what extent it was exploited.

Based on examinations of audit logs by researchers, it has been reported that some attackers may have exploited the flaw for at least five months before discovery and announcement.&lt;ref&gt;{{cite web |first=Sean |last=Gallagher |title=Heartbleed vulnerability may have been exploited months before patch |url=http://arstechnica.com/security/2014/04/heartbleed-vulnerability-may-have-been-exploited-months-before-patch/ |work=[[Ars Technica]] |date=April 9, 2014 }}&lt;/ref&gt;&lt;ref&gt;{{cite web|last1=Eckersley|first1=Peter|title=Wild at Heart: Were Intelligence Agencies Using Heartbleed in November 2013?|url=https://www.eff.org/deeplinks/2014/04/wild-heart-were-intelligence-agencies-using-heartbleed-november-2013|publisher=Eff.org|accessdate=25 November 2014}}&lt;/ref&gt; Errata Security pointed out that a widely used non-malicious program called ''Masscan'', introduced six months before Heartbleed's disclosure, abruptly terminates the connection in the middle of handshaking in the same way as Heartbleed, generating the same server log messages, adding ''Two new things producing the same error messages might seem like the two are correlated, but of course, they aren't.&lt;ref&gt;{{cite web|last=Graham|first=Robert|title=No, we weren't scanning for hearbleed before April 7|url=http://blog.erratasec.com/2014/04/no-we-werent-scanning-for-hearbleed.html|publisher=Errata Security|date=April 9, 2014}}&lt;/ref&gt;''

According to [[Bloomberg News]], two unnamed insider sources informed it that the United States' [[National Security Agency]] had been aware of the flaw since shortly after its appearance but{{mdashb}}instead of reporting it{{mdashb}}kept it secret among other unreported [[Zero-day attack|zero-day]] vulnerabilities in order to exploit it for the NSA's own purposes.&lt;ref&gt;{{cite web|last=Riley |first=Michael |url=http://www.bloomberg.com/news/2014-04-11/nsa-said-to-have-used-heartbleed-bug-exposing-consumers.html |title=NSA Said to Exploit Heartbleed Bug for Intelligence for Years |publisher=Bloomberg L.P. |date=2014-04-12}}&lt;/ref&gt;&lt;ref&gt;{{cite news |url=http://www.usatoday.com/story/tech/2014/04/11/heartbleed-cisco-juniper/7589759/ |last=Molina|first=Brett|title=Report: NSA exploited Heartbleed for years |work=[[USA Today]] |date= |accessdate=April 11, 2014}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://business.financialpost.com/2014/04/11/nsa-exploited-heartbleed-bug-for-two-years-to-gather-intelligence-sources-say/ |title=NSA exploited Heartbleed bug for two years to gather intelligence, sources say |last=Riley|first=Michael|work=[[Financial Post]] |date= |accessdate=April 11, 2014}}&lt;/ref&gt; The NSA has denied this claim,&lt;ref&gt;{{cite web |url=http://icontherecord.tumblr.com/post/82416436703/statement-on-bloomberg-news-story-that-nsa-knew |title=Statement on Bloomberg News story that NSA knew about the 'Heartbleed bug' flaw and regularly used it to gather critical intelligence |date=April 11, 2014 |publisher=[[National Security Agency]]}}&lt;/ref&gt; as has [[Richard A. Clarke]], a member of the [[Director of National Intelligence Review Group on Intelligence and Communications Technologies|National Intelligence Review Group on Intelligence and Communications Technologies]] that reviewed the United States' electronic surveillance policy; he told Reuters on April 11, 2014 that the NSA had not known of Heartbleed.&lt;ref&gt;{{cite news|title=White House, spy agencies deny NSA exploited 'Heartbleed' bug|url=http://www.reuters.com/article/2014/04/11/us-cybersecurity-internet-bug-nsa-idUSBREA3A1XD20140411|newspaper=Reuters|date=April 11, 2014|author=Mark Hosenball|author2=Will Dunham}}&lt;/ref&gt; The allegation prompted the American government to make, for the first time, a public statement on its zero-day vulnerabilities policy, accepting the recommendation of the review group's 2013 report that had asserted &quot;in almost all instances, for widely used code, it is in the national interest to eliminate software vulnerabilities rather than to use them for US intelligence collection&quot;, and saying that the decision to withhold should move from the NSA to the White House.&lt;ref&gt;{{cite web|last1=Zetter|first1=Kim|title=U.S. Gov Insists It Doesn’t Stockpile Zero-Day Exploits to Hack Enemies|url=http://www.wired.com/2014/11/michael-daniel-no-zero-day-stockpile/|publisher=wired.com|accessdate=25 November 2014}}&lt;/ref&gt;

== Behavior ==

[[File:Simplified Heartbleed explanation.svg|thumb|250px|A depiction of Heartbleed]]

The RFC 6520 Heartbeat Extension tests TLS/DTLS secure communication links by allowing a computer at one end of a connection to send a ''Heartbeat Request'' message, consisting of a payload, typically a text string, along with the payload's length as a [[16-bit]] integer. The receiving computer then must send exactly the same payload back to the sender.

The affected versions of OpenSSL allocate a [[Data buffer|memory buffer]] for the message to be returned based on the length field in the requesting message, without regard to the actual size of that message's payload. Because of this failure to do proper [[bounds checking]], the message returned consists of the payload, possibly followed by whatever else happened to be in the allocated memory buffer.

Heartbleed is therefore exploited by sending a malformed heartbeat request with a small payload and large length field to the vulnerable party (usually a server) in order to elicit the victim's response, permitting attackers to read up to 64 kilobytes of the victim's memory that was likely to have been used previously by OpenSSL.&lt;ref&gt;{{cite web|url=http://www.troyhunt.com/2014/04/everything-you-need-to-know-about.html|title=Everything you need to know about the Heartbleed SSL bug |date=April 9, 2014|first=Troy|last= Hunt}}&lt;/ref&gt; Where a Heartbeat Request might ask a party to &quot;send back the four-letter word 'bird'&quot;, resulting in a response of &quot;bird&quot;, a &quot;Heartbleed Request&quot; (a malicious heartbeat request) of &quot;send back the 500-letter word 'bird'&quot; would cause the victim to return &quot;bird&quot; followed by whatever 496 characters the victim happened to have in active memory. Attackers in this way could receive sensitive data, compromising the confidentiality of the victim's communications. Although an attacker has some control over the disclosed memory block's size, it has no control over its location, and therefore cannot choose what content is revealed.

=== Affected OpenSSL installations ===

The affected versions of OpenSSL are OpenSSL 1.0.1 through 1.0.1f (inclusive). Subsequent versions (1.0.1g&lt;ref&gt;{{cite web|title=git.openssl.org Git - openssl.git/log|url=https://git.openssl.org/gitweb/?p=openssl.git;a=log;h=refs/tags/OpenSSL_1_0_1g|website=git.openssl.org|accessdate=25 November 2014}}&lt;/ref&gt; and later) and previous versions (1.0.0 branch and older) are ''not'' vulnerable.&lt;ref&gt;{{cite web |url=http://community.spiceworks.com/topic/474704-cyberoam-users-need-not-bleed-over-heartbleed-exploit?utm_source=feedburner&amp;utm_medium=feed|title=Spiceworks Community Discussions |date= |accessdate=April 11, 2014 |publisher=community.spiceworks.com}}&lt;/ref&gt; Installations of the affected versions are vulnerable unless OpenSSL was compiled with ''-DOPENSSL_NO_HEARTBEATS''.&lt;ref&gt;{{cite web|title=OpenSSL Security Advisory [07 Apr 2014]|url=https://www.openssl.org/news/secadv_20140407.txt|author=The OpenSSL Project| date=April 7, 2014}}&lt;/ref&gt;&lt;ref&gt;{{cite web|title= OpenSSL versions and vulnerability [9 April 2014]|url=https://blogs.comodo.com/e-commerce/heartbleed-bug-comodo-urges-openssl-users-to-apply-patch/|accessdate=9 April 2014}}&lt;/ref&gt;

==== Vulnerable program and function ====

The vulnerable program source files are t1_lib.c and d1_both.c and the vulnerable functions are tls1_process_heartbeat() and dtls1_process_heartbeat().&lt;ref&gt;{{cite web |url=http://www.cyberoam.com/blog/cyberoam-users-need-not-bleed-over-heartbleed-exploit/ |title=Cyberoam Users Need not Bleed over Heartbleed Exploit |accessdate=April 11, 2014 |publisher=cyberoam.com}}&lt;/ref&gt;&lt;ref&gt;{{cite web|title= tls1_process_heartbeat [9 April 2014]|url=http://openssl.6102.n7.nabble.com/tls1-process-heartbeat-dtls1-process-heartbeat-don-t-check-RAND-pseudo-bytes-return-value-td49256.html|accessdate=10 April 2014}}&lt;/ref&gt;

=== Patch ===

The problem can be fixed by ignoring Heartbeat Request messages that ask for more data than their payload needs.

Version 1.0.1g of OpenSSL adds some bounds checks to prevent the buffer over-read. For example, the following test was introduced to determine whether a heartbeat request would trigger Heartbleed; it silently discards malicious requests.
&lt;source lang=&quot;c&quot;&gt;
if (1 + 2 + payload + 16 &gt; s-&gt;s3-&gt;rrec.length) return 0; /* silently discard per RFC 6520 sec. 4 */
&lt;/source&gt;
The version control system contains a complete list of changes.&lt;ref name=&quot;fix&quot;&gt;{{cite web|url=http://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=96db902 |title=&quot;complete list of changes&quot; (Git – openssl.git/commitdiff) |publisher= The OpenSSL Project |date=April 7, 2014 |accessdate=April 10, 2014}}&lt;/ref&gt;

== Impact ==

The data obtained by a Heartbleed attack may include unencrypted exchanges between TLS parties likely to be confidential, including any form [[POST (HTTP)|post data]] in users' requests. Moreover, the confidential data exposed could include authentication secrets such as [[session cookie]]s and passwords, which might allow attackers to impersonate a user of the service.&lt;ref&gt;{{cite web |url=http://ipsec.pl/ssl-tls/2014/why-heartbleed-dangerous-exploiting-cve-2014-0160.html |title=Why Heartbleed is dangerous? Exploiting CVE-2014-0160 |year=2014 |publisher=IPSec.pl}}&lt;/ref&gt;

An attack may also reveal [[Public-key cryptography|private keys]] of compromised parties,&lt;ref name=&quot;hb&quot;/&gt;&lt;ref name=&quot;hbos&quot;/&gt;&lt;ref&gt;{{cite web|author=John Graham-Cumming |url=http://blog.cloudflare.com/searching-for-the-prime-suspect-how-heartbleed-leaked-private-keys |title=Searching for The Prime Suspect: How Heartbleed Leaked Private Keys |publisher=CloudFlare |date=2014-04-28 |accessdate=2014-06-07}}&lt;/ref&gt; which would enable attackers to decrypt communications (future or past stored traffic captured via passive eavesdropping, unless [[perfect forward secrecy]] is used, in which case only future traffic can be decrypted if intercepted via [[man-in-the-middle attack]]s).

An attacker having gained authentication material may impersonate the material's owner after the victim has patched Heartbleed, as long as the material is accepted (for example, until the password is changed or the private key revoked). Heartbleed therefore constitutes a critical threat to confidentiality. However, an attacker impersonating a victim may also alter data. Indirectly, Heartbleed's consequences may thus go far beyond a confidentiality breach for many systems.&lt;ref&gt;{{cite web|title= Servers Vulnerable to Heartbleed [14 July 2014]|url=https://blogs.comodo.com/e-commerce/many-servers-vulnerable-heartbleed-act-now/|last=Judge|first=Kevin|accessdate=25 Aug 2014}}&lt;/ref&gt;

A survey of American adults conducted in April 2014 showed that 60 percent had heard about Heartbleed. Among those using the Internet, 39 percent had protected their online accounts, for example by changing passwords or canceling accounts; 29 percent believed their personal information was put at risk because of the Heartbleed bug; and 6 percent believed their personal information had been stolen.&lt;ref&gt;{{cite web|title=Heartbleed’s Impact|url=http://www.pewinternet.org/2014/04/30/heartbleeds-impact/2/#main-findings|work=Pew Research Internet Project|publisher=[[Pew Research Center]]|author1=Lee Rainie|author2= Maeve Duggan |page=2|date=2014-04-30}}&lt;/ref&gt;&lt;!-- This doesn't fit much in this section. Move to lead or create new section? Chealer 20140524 --&gt;

=== Client-side vulnerability ===

Although the bug received more attention due to the threat it represents for servers,&lt;ref&gt;{{cite web|last=Bradley|first=Tony|title=Reverse Heartbleed puts your PC and devices at risk of OpenSSL attack|url=http://www.pcworld.com/article/2142808/reverse-heartbleed-puts-your-pc-and-the-internet-of-things-at-risk.html|work=PCWorld|publisher=IDG Consumer &amp; SMB|date=2014-04-14}}&lt;/ref&gt; TLS clients using affected OpenSSL instances are also vulnerable. In what ''The Guardian'' therefore dubbed ''Reverse Heartbleed'', malicious servers are able to exploit Heartbleed to read data from a vulnerable client's memory.&lt;ref name=&quot;guardian&quot;&gt;{{cite web|author=Charles Arthur |url=http://www.theguardian.com/technology/2014/apr/15/heartbleed-android-phones-vulnerable-data-shows |title=Heartbleed makes 50m Android phones vulnerable, data shows |publisher=Guardian News and Media Limited |work=The Guardian |date=2014-04-15}}&lt;/ref&gt; Security researcher Steve Gibson said of Heartbleed that:{{bq|It's not just a server-side vulnerability, it's also a client-side vulnerability because the server, or whomever you connect to, is as able to ask you for a heartbeat back as you are to ask them.&lt;ref&gt;{{cite web|url=http://twit.tv/show/security-now/451 |title=Security Now 451 |publisher=Twit.Tv |date= |accessdate=2014-04-19}}&lt;/ref&gt;}}

The stolen data could contain usernames and passwords.&lt;ref&gt;{{cite web|last=Ramzan|first=Zulfikar|title='Reverse Heartbleed' can attack PCs and mobile phones|url=http://www.scmagazine.com/reverse-heartbleed-can-attack-pcs-and-mobile-phones/article/344108/|work=SC Magazine|publisher=Haymarket Media, Inc|date=2014-04-24}}&lt;/ref&gt; Reverse Heartbleed affected millions of application instances.&lt;ref name=&quot;guardian&quot; /&gt; Some of the vulnerable applications are listed in the [[#Software applications|&quot;Software applications&quot; section below]].

=== Specific systems affected ===

[[Cisco Systems]] has identified 78 of its products as vulnerable, including IP phone systems and telepresence (video conferencing) systems.&lt;ref name=Cisco&gt;{{cite web|url=http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20140409-heartbleed |title=OpenSSL Heartbeat Extension Vulnerability in Multiple Cisco Products|publisher=Cisco Systems |date=2014-04-09}}&lt;/ref&gt;

==== Websites and other online services ====
An analysis posted on [[GitHub]] of the most visited websites on April 8, 2014 revealed vulnerabilities in sites including [[Yahoo!]], [[Imgur]], [[Stack Overflow (website)|Stack Overflow]], [[Slate (magazine)|Slate]], and [[DuckDuckGo]].&lt;ref name=&quot;heartbleed-masstest: Overview&quot;&gt;{{cite web
  | url        = https://github.com/musalbas/heartbleed-masstest#overview
  | title      = heartbleed-masstest: Overview
  | website    = [[GitHub]]
  | accessdate = 2014-04-19
}}&lt;/ref&gt;&lt;ref&gt;{{cite web |last=Cipriani |first=Jason |title=Which sites have patched the Heartbleed bug? |url= http://www.cnet.com/how-to/which-sites-have-patched-the-heartbleed-bug/ |date=April 10, 2014 |website= [[CNET]] |accessdate=April 10, 2014 }}&lt;/ref&gt;  The following sites have services affected or made announcements recommending that users update passwords in response to the bug:

{{Div col||20em}}
* [[Akamai Technologies]]&lt;ref&gt;{{cite news
  | title       = Heartbleed FAQ: Akamai Systems Patched
  | url         = https://blogs.akamai.com/2014/04/heartbleed-faq-akamai-systems-patched.html
  | publisher   = [[Akamai Technologies]]
  | date        = April 8, 2014
}}&lt;/ref&gt;
* [[Amazon Web Services]]&lt;ref&gt;{{cite news
  | title       = AWS Services Updated to Address OpenSSL Vulnerability
  | url         = https://aws.amazon.com/security/security-bulletins/aws-services-updated-to-address-openssl-vulnerability/
  | publisher   = [[Amazon Web Services]]
  | date        = April 8, 2014
}}&lt;/ref&gt;
* [[Ars Technica]]&lt;ref&gt;{{cite news
  | title       = Dear readers, please change your Ars account passwords ASAP
  | url         = http://arstechnica.com/security/2014/04/dear-readers-please-change-your-ars-account-passwords-asap/
  | publisher   = Ars Technica
  | date        = April 8, 2014
}}&lt;/ref&gt;
* [[Bitbucket]]&lt;ref&gt;{{cite news
  | title       = All Heartbleed upgrades are now complete
  | url         = http://blog.bitbucket.org/2014/04/09/all-heartbleed-upgrades-are-now-complete/
  | publisher   = BitBucket Blog
  | date        = April 9, 2014
}}&lt;/ref&gt;
* BrandVerity&lt;ref&gt;{{cite news
  | title       = Keeping Your BrandVerity Account Safe from the Heartbleed Bug
  | url         = http://blog.brandverity.com/2721/keeping-your-brandverity-account-safe-from-the-heartbleed-bug/
  | publisher   = BrandVerity Blog
  | date        = April 9, 2014
}}&lt;/ref&gt;
* [[Freenode]]&lt;ref&gt;{{cite web
  | title       = Twitter / freenodestaff: we've had to restart a bunch...
  | url         = https://twitter.com/freenodestaff/status/453470038704795648
  | date        = April 8, 2014
}}&lt;/ref&gt;
* [[GitHub]]&lt;ref&gt;{{cite news
  | title       = Security: Heartbleed vulnerability
  | url         = https://github.com/blog/1818-security-heartbleed-vulnerability
  | publisher   = [[GitHub]]
  | date        = April 8, 2014
}}&lt;/ref&gt;
* [[IFTTT]]&lt;ref&gt;{{cite news
  | title       = IFTTT Says It Is 'No Longer Vulnerable' To Heartbleed
  | url         = http://www.lifehacker.com.au/2014/04/ifttt-says-it-is-no-longer-vulnerable-to-heartbleed/
  | publisher   = [[LifeHacker]]
  | date        = April 8, 2014
}}&lt;/ref&gt;
* [[Internet Archive]]&lt;ref&gt;{{cite web|url=https://blog.archive.org/2014/04/09/heartbleed-bug-and-the-archive/ |title=Heartbleed bug and the Archive &amp;#124; Internet Archive Blogs |publisher=Blog.archive.org |date=April 9, 2014 |accessdate=April 14, 2014}}&lt;/ref&gt;
* [[Minecraft.net|Mojang]]&lt;ref&gt;{{cite web|url=https://twitter.com/KrisJelbring/status/453559871028613121 |title=Twitter / KrisJelbring: If you logged in to any of |publisher=Twitter.com |date=April 8, 2014 |accessdate=April 14, 2014}}&lt;/ref&gt;
* [[Mumsnet]]&lt;ref name=&quot;bbc-mumsnet&quot;&gt;{{cite web|last=Kelion |first=Leo |url=http://www.bbc.co.uk/news/technology-27028101 |title=BBC News - Heartbleed hacks hit Mumsnet and Canada's tax agency |publisher=BBC News |date=2014-04-14}}&lt;/ref&gt;
* [[PeerJ]]&lt;ref&gt;{{cite news
  | title       = The widespread OpenSSL ‘Heartbleed' bug is patched in PeerJ
  | url         = http://blog.peerj.com/post/82185230692/the-widespread-openssl-heartbleed-bug-is-patched-in
  | publisher   = [[PeerJ]]
  | date        = April 9, 2014
}}&lt;/ref&gt;
* [[Pinterest]]&lt;ref&gt;{{cite web|title=Was Pinterest impacted by the Heartbleed issue?|url=http://help.pinterest.com/en/articles/was-pinterest-impacted-heartbleed-issue|work=Help Center|publisher=Pinterest|accessdate=April 20, 2014}}&lt;/ref&gt;
* [[Prezi]]&lt;ref&gt;{{cite web|url=http://engineering.prezi.com/blog/2014/04/12/heartbleed/|title=Heartbleed Defeated|accessdate=April 13, 2014}}&lt;/ref&gt;
* [[Reddit]]&lt;ref&gt;{{cite web|author=Staff |title=We recommend that you change your reddit password |url=http://www.reddit.com/r/announcements/comments/231hl7/we_recommend_that_you_change_your_reddit_password |date=April 14, 2014 |work=[[Reddit]] |accessdate=April 14, 2014}}&lt;/ref&gt;
* [[Something Awful]]&lt;ref&gt;{{cite web|url=http://forums.somethingawful.com/announcement.php?forumid=1|title=IMPORTANT ANNOUNCEMENTS FROM THE MAKERS OF CHILI|accessdate=April 13, 2014}}&lt;/ref&gt;
* [[SoundCloud]]&lt;ref&gt;{{cite news
 | url         =http://blog.soundcloud.com/2014/04/09/heartbleed/
 | title       =Security Update: We're going to sign out everyone today, here's why
 |last=Codey|first=Brendan
 |date=April 9, 2014|publisher=[[SoundCloud]]
}}&lt;/ref&gt;
* [[SourceForge]]&lt;ref&gt;{{cite news
 | url         =https://sourceforge.net/blog/sourceforge-response-to-heartbleed/
 | title       =SourceForge response to Heartbleed
 |date=April 10, 2014|publisher=[[SourceForge]]
}}&lt;/ref&gt;
* [[SparkFun]]&lt;ref&gt;{{cite news
 | url         =https://www.sparkfun.com/news/1455
 | title       =Heartbleed
 |date=April 9, 2014|publisher=[[SparkFun]]
}}&lt;/ref&gt;
* [[Stripe (company)|Stripe]]&lt;ref&gt;{{cite news
  | title       = Heartbleed
  | url         = https://stripe.com/blog/heartbleed
  | publisher   = [[Stripe (company)]]
  | date        = April 9, 2014
  | accessdate  = April 10, 2014
}}&lt;/ref&gt;
* [[Tumblr]]&lt;ref&gt;{{cite web|url=http://staff.tumblr.com/post/82113034874/urgent-security-update|title=Tumblr Staff-Urgent security update|date=April 8, 2014|accessdate=April 9, 2014}}&lt;/ref&gt;&lt;ref&gt;{{cite news
  | title       = Heartbleed: don't rush to update passwords, security experts warn
  | first       = Alex
  | last        = Hern
  | url         = http://www.theguardian.com/technology/2014/apr/09/heartbleed-dont-rush-to-update-passwords-security-experts-warn
  | publisher   = ''[[The Guardian]]''
  | date        = April 9, 2014
}}&lt;/ref&gt;
* [[List of Wikimedia projects|All Wikimedia Foundation wikis]] (including Wikipedia in all languages)&lt;ref name=&quot;wikimedia&quot; /&gt;&lt;ref&gt;{{cite web|url=https://blog.wikimedia.org/2014/04/10/wikimedias-response-to-the-heartbleed-security-vulnerability/|title=Wikimedia's response to the &quot;Heartbleed&quot; security vulnerability|last=Grossmeier|first=Greg|date=April 10, 2014|work=Wikimedia Foundation blog|publisher=Wikimedia Foundation|accessdate=April 10, 2014}}&lt;/ref&gt;
* [[Wunderlist]]&lt;ref&gt;{{cite web|url=http://support.wunderlist.com/customer/portal/articles/1508382-sync-service-heartbleed---8th-of-april-2014|title=Wunderlist &amp; the Heartbleed OpenSSL Vulnerability|date=April 10, 2014}}&lt;/ref&gt;
{{Div col end}}

The Canadian federal government temporarily shut online services of the [[Canada Revenue Agency]] (CRA) and several government departments over Heartbleed bug security concerns.&lt;ref&gt;{{cite news
  | title       = Security concerns prompts tax agency to shut down website
  | url         = http://www.ctvnews.ca/canada/security-concerns-prompts-tax-agency-to-shut-down-website-1.1767727
  | publisher   = [[CTV News]]
  | date        = April 9, 2014
  | accessdate  = April 9, 2014
}}&lt;/ref&gt;&lt;ref&gt;{{cite news|title=Heartbleed: Canadian tax services back online|url=http://www.cbc.ca/news/business/heartbleed-canadian-tax-services-back-online-1.2608781|work=CBC News|accessdate=April 14, 2014}}&lt;/ref&gt;

Platform maintainers like the Wikimedia Foundation advised their users to change passwords.&lt;ref name=&quot;wikimedia&quot;&gt;{{cite web|url=http://lists.wikimedia.org/pipermail/wikitech-l/2014-April/075801.html|title=[Wikitech-l] Fwd: Security precaution – Resetting all user sessions today|last=Grossmeier|first=Greg|date=April 8, 2014|publisher=[[Wikimedia Foundation]]|accessdate=April 9, 2014}}&lt;/ref&gt;

The servers of [[LastPass]] were vulnerable,&lt;ref&gt;{{cite news|last=Fiegerman|first=Seth|title=The Heartbleed Effect: Password Services Are Having a Moment|url=http://mashable.com/2014/04/14/heartbleed-password-management/|newspaper=Mashable|date=April 14, 2014}}&lt;/ref&gt; but due to additional encryption and forward secrecy, potential attacks were not able to exploit this bug. However, LastPass recommended that its users change passwords for vulnerable websites.&lt;ref&gt;{{cite web |title=LastPass and the Heartbleed Bug |url=http://blog.lastpass.com/2014/04/lastpass-and-heartbleed-bug.html |date=April 8, 2014 |publisher=LastPass|accessdate=April 28, 2014 }}&lt;/ref&gt;

The [[Tor (anonymity network)|Tor]] Project recommended that Tor relay operators and hidden service operators revoke and generate fresh keys after patching OpenSSL, but noted that Tor relays use two sets of keys and that Tor's multi-hop design minimizes the impact of exploiting a single relay.&lt;ref name=&quot;tor&quot;/&gt; 586 relays later found to be susceptible to the Heartbleed bug were taken off-line as a precautionary measure.&lt;ref&gt;{{cite web|url=https://lists.torproject.org/pipermail/tor-relays/2014-April/004336.html |title=[tor-relays&amp;#93; Rejecting 380 vulnerable guard/exit keys |publisher=Lists.torproject.org |date= |accessdate=2014-04-19}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=https://blog.torproject.org/blog/tor-weekly-news-%E2%80%94-april-16th-2014 |title=Tor Weekly News—April 16th, 2014 &amp;#124; The Tor Blog |publisher=Blog.torproject.org |date= |accessdate=2014-04-19}}&lt;/ref&gt;&lt;ref&gt;{{cite web|last=Gallagher |first=Sean |url=http://arstechnica.com/security/2014/04/tor-networks-ranks-of-relay-servers-cut-because-of-heartbleed-bug/ |title=Tor network's ranks of relay servers cut because of Heartbleed bug |publisher=Ars Technica |date=2012-05-17 |accessdate=2014-04-19}}&lt;/ref&gt;&lt;ref&gt;{{cite web|last=Mimoso |first=Michael |url=http://threatpost.com/tor-begins-blacklisting-exit-nodes-vulnerable-to-heartbleed/105519 |title=Tor Blacklisting Exit Nodes Vulnerable to Heartbleed Bug &amp;#124; Threatpost &amp;#124; The first stop for security news |publisher=Threatpost |date= |accessdate=2014-04-19}}&lt;/ref&gt;

Game-related services including [[Steam (software)|Steam]], ''[[Minecraft]]'', [[Wargaming.net]], ''[[League of Legends]]'', [[GOG.com]], [[Origin (digital distribution software)|Origin]], [[Sony Online Entertainment]], [[Humble Bundle]], and ''[[Path of Exile]]'' were affected and subsequently fixed.&lt;ref&gt;{{cite web|author=Paul Younger |url=http://www.incgamers.com/2014/04/pc-game-services-affected-by-heartbleed-and-actions-you-need-to-take |title=PC game services affected by Heartbleed and actions you need to take |publisher=IncGamers |date=2014-04-11}}&lt;/ref&gt;

==== Software applications ====

Vulnerable software applications include:

* Several [[Hewlett-Packard]] server applications, such as HP System Management Homepage (SMH) for Linux and Windows.&lt;ref&gt;{{cite web |url=http://h20566.www2.hp.com/hpsc/doc/public/display?calledBy=&amp;docId=emr_na-c04239413-1 |title=HP Servers Communication: OpenSSL &quot;HeartBleed&quot; Vulnerability |date=April 18, 2014 |deadurl=no}}&lt;/ref&gt;
* Some versions of [[FileMaker]] 13&lt;ref name=FileMaker&gt;{{cite web|url=http://help.filemaker.com/app/answers/detail/a_id/13384/~/filemaker-products-and-the-heartbleed-bug|title=FileMaker products and the Heartbleed bug|date=May 6, 2014}}&lt;/ref&gt;
* [[LibreOffice]] 4.2.0 to 4.2.2 (fixed in 4.2.3)&lt;ref name=&quot;libreoffice&quot;&gt;{{cite web |url=http://blog.documentfoundation.org/2014/04/10/libreoffice-4-2-3-is-now-available-for-download/ |title=LibreOffice 4.2.3 is now available for download |author=italovignoli |date=April 10, 2014 |website=[[The Document Foundation]] |archiveurl=https://web.archive.org/web/20140412013421/http://blog.documentfoundation.org/2014/04/10/libreoffice-4-2-3-is-now-available-for-download/ |archivedate=April 12, 2014 |deadurl=no |accessdate=April 11, 2014}}&lt;/ref&gt;&lt;ref&gt;{{cite web| url= http://www.libreoffice.org/about-us/security/advisories/cve-2014-0160/ |title= CVE-2014-0160 |publisher=[[LibreOffice]]|date=April 7, 2014 | accessdate = May 2, 2014}}&lt;/ref&gt;
* [[LogMeIn]] claimed to have &quot;updated many products and parts of our services that rely on OpenSSL&quot;.&lt;ref name=&quot;logmein&quot;&gt;{{cite news
  | title       = LogMeIn and OpenSSL
  | url         = http://blog.logmein.com/products/openssl
  | publisher   = [[LogMeIn]]
  | accessdate  = April 10, 2014
}}&lt;/ref&gt;
* Multiple [[McAfee]] products, in particular some versions of software providing anti-viral coverage for Microsoft Exchange, software firewalls, and McAfee Email and Web Gateways&lt;ref&gt;{{cite web |url=https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10071 |title=McAfee Security Bulletin – OpenSSL Heartbleed vulnerability patched in McAfee products |website=McAfee KnowledgeBase |publisher=[[McAfee]] |date=2014-04-17}}&lt;/ref&gt;
* [[MySQL Workbench]] 6.1.4 and earlier&lt;ref name=&quot;oracle-heartbleed&quot; /&gt;&lt;!-- The reference doesn't specify a minimal version --&gt;
* Oracle [[MySQL]] Connector/C 6.1.0-6.1.3 and Connector/ODBC 5.1.13, 5.2.5-5.2.6, 5.3.2&lt;ref name=&quot;oracle-heartbleed&quot;&gt;{{cite web|url=http://www.oracle.com/technetwork/topics/security/opensslheartbleedcve-2014-0160-2188454.html | title=OpenSSL Security Bug - Heartbleed / CVE-2014-0160 | accessdate=12 May 2014}}&lt;/ref&gt;
* [[Oracle Big Data Appliance]] (includes Oracle Linux 6)&lt;ref name=&quot;oracle-heartbleed&quot; /&gt;
* [[Primavera (software)|Primavera]] P6 Professional Project Management (includes Primavera P6 Enterprise Project Portfolio Management)&lt;ref name=&quot;oracle-heartbleed&quot; /&gt;
* [[WinSCP]] (FTP client for Windows) 5.5.2 and some earlier versions (only vulnerable with FTP over TLS/SSL, fixed in 5.5.3)&lt;ref&gt;{{cite web| url=http://winscp.net/eng/docs/history#5.5.3 |title=Recent Version History |publisher=[[WinSCP]]| date=April 14, 2014 | accessdate = May 2, 2014}}&lt;/ref&gt;
* Multiple [[VMware]] products, including [[VMware ESXi]] 5.5, [[VMware Player]] 6.0, [[VMware Workstation]] 10 and the series of Horizon products, emulators and cloud computing suites&lt;ref&gt;{{cite web|url=http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=2076225 |title=Response to OpenSSL security issue CVE-2014-0160/CVE-2014-0346 a.k.a: &quot;Heartbleed&quot;| publisher=VMware, Inc |accessdate=2014-04-17}}&lt;/ref&gt;

Several other [[Oracle Corporation]] applications were affected.&lt;ref name=&quot;oracle-heartbleed&quot; /&gt;

==== Operating systems/firmwares ====
Several GNU/Linux distributions were affected, including [[Debian]]&lt;ref&gt;{{cite web |url=https://www.debian.org/security/2014/dsa-2896 |title=DSA-2896-1 openssl—security update |date=April 7, 2014 |publisher=The Debian Project}}&lt;/ref&gt; (and derivatives such as [[Linux Mint]] and [[Ubuntu (operating system)|Ubuntu]]&lt;ref&gt;{{cite web |url=http://www.ubuntu.com/usn/usn-2165-1/ |title=Ubuntu Security Notice USN-2165-1 |date=April 7, 2014 |accessdate=April 17, 2014 |publisher=Canonical, Ltd.}}&lt;/ref&gt;) and [[Red Hat Enterprise Linux]]&lt;ref&gt;{{cite web |url=http://rhn.redhat.com/errata/RHSA-2014-0376.html |title=Important: openssl security update |date=April 8, 2014 |publisher=Red Hat, Inc.}}&lt;/ref&gt; (and derivatives such as [[CentOS]],&lt;ref&gt;{{cite web |url=http://lists.centos.org/pipermail/centos-announce/2014-April/020248.html |title=Karanbir Singh's posting to CentOS-announce |date=April 8, 2014  |publisher=centos.org}}&lt;/ref&gt; [[Oracle Linux]] 6&lt;ref name=&quot;oracle-heartbleed&quot; /&gt; and [[Amazon Linux]]&lt;ref&gt;{{cite web |url=https://aws.amazon.com/amazon-linux-ami/security-bulletins/ALAS-2014-320/ |title=Amazon Linux AMI Security Advisory: ALAS-2014-320 |date=April 7, 2014 |accessdate=April 17, 2014 |publisher=Amazon Web Services, Inc.}}&lt;/ref&gt;), as well as the following operating systems and firmware implementations:

* [[Android (operating system)|Android]] 4.1.1, used in various portable devices.&lt;ref&gt;{{cite web|url=http://gadgets.ndtv.com/internet/news/android-411-devices-vulnerable-to-heartbleed-bug-says-google-508262 |title=Android 4.1.1 devices vulnerable to Heartbleed bug, says Google |publisher=NDTV Convergence |date=2014-04-14}}&lt;/ref&gt; Chris Smith writes in [[Boy Genius Report]] that just this one version of Android is affected but that it is a popular version of Android ([[Chitika]] claim 4.1.1 is on 50 million devices;&lt;ref&gt;{{cite web|url=http://www.foxnews.com/tech/2014/04/17/about-50-million-android-devices-are-still-vulnerable-to-heartbleed-bug/ |title=Around 50 million Android smartphones are still vulnerable to the Heartbleed Bug |publisher=Fox News |date=2014-04-17}}&lt;/ref&gt; Google describe it as less than 10% of activated Android devices). Other Android versions are not vulnerable as they either have heartbeats disabled or use an unaffected version of OpenSSL.&lt;ref&gt;{{cite web|url=http://bgr.com/2014/04/16/heartbleed-android-4-1-1-jelly-bean |title=Heartbleed: Android 4.1.1 Jelly Bean could be seriously affected |publisher=BGR Media |date=2014-04-16}}&lt;/ref&gt;&lt;ref&gt;{{cite web|last=Blaich|first=Andrew|title=Heartbleed Bug Impacts Mobile Devices|url=https://bluebox.com/technical/heartbleed-bug-impacts-mobile-devices/|publisher=Bluebox|date=2014-04-08}}
&lt;!-- This reference would not be needed, but explains why 4.1.2 and later are not vulnerable in practice, which is relevant as David Wheeler claims 4.1.4 is vulnerable --&gt;&lt;/ref&gt;
* Firmware for some [[AirPort]] base stations&lt;ref&gt;{{cite web|last=Snell|first=Jason|title=Apple releases Heartbleed fix for AirPort Base Stations|url=http://www.macworld.com/article/2146391/apple-releases-heartbleed-fix-for-airport-base-stations.html|work=Macworld|date=2014-04-22}}&lt;/ref&gt;
* Firmware for some [[Cisco Systems]] routers&lt;ref name=&quot;Cisco&quot; /&gt;&lt;ref&gt;{{Cite news | last = Kleinman | first = Alexis | date = April 11, 2014 | title = The Heartbleed Bug Goes Even Deeper Than We Realized – Here's What You Should Do| newspaper  = [[The Huffington Post]]| url = http://www.huffingtonpost.com/2014/04/11/heartbleed-routers_n_5132306.html}}&lt;/ref&gt;&lt;ref name=&quot;online.wsj.com&quot;&gt;{{cite web|last=Yadron |first=Danny |url=http://online.wsj.com/news/articles/SB10001424052702303873604579493963847851346?mg=reno64-wsj&amp;url=http://online.wsj.com/article/SB10001424052702303873604579493963847851346.html |title=Heartbleed Bug Found in Cisco Routers, Juniper Gear |publisher=Dow Jones &amp; Company, Inc |date=2014-04-10}}&lt;/ref&gt;
* Firmware for some [[Juniper Networks]] routers&lt;ref name=&quot;online.wsj.com&quot;/&gt;&lt;ref&gt;{{cite web|url=http://kb.juniper.net/InfoCenter/index?page=content&amp;id=JSA10623 |title=2014-04 Out of Cycle Security Bulletin: Multiple products affected by OpenSSL &quot;Heartbleed&quot; issue (CVE-2014-0160) |publisher=Juniper Networks|date=2014-04-14}}&lt;/ref&gt;
* [[IPCop]] 2.1.3 and some earlier versions (fixed in 2.1.4)&lt;ref&gt;{{cite web |url=http://marc.info/?l=ipcop-announce&amp;m=139697815506679 |title=IPCop 2.1.4 is released |author=IPCop |authorlink=IPCop |date=April 8, 2014 |id=139697815506679}}&lt;/ref&gt;
* [[pfSense]] 2.1.0 and 2.1.1 (fixed in 2.1.2)&lt;ref&gt;{{cite web| url= https://www.pfsense.org/security/advisories/pfSense-SA-14_04.openssl.asc |title= OpenSSL &quot;Heartbleed&quot; Information Disclosure, ECDSA | publisher= Electric Sheep Fencing LLC |date=April 8, 2014 |accessdate=May 2, 2014}}&lt;/ref&gt;
* [[Western Digital]] My Cloud product family firmware&lt;ref&gt;{{cite news
  | title       = Heartbleed Bug Issue
  | url         = http://www.wdc.com/en/heartbleedupdate/
  | publisher   = [[Western Digital]]
  | date        = April 10, 2014
}}&lt;/ref&gt;

=== Vulnerability testing services ===

Several services have been made available to test whether Heartbleed affects a given site. However, many services have been claimed to be ineffective for detecting the bug.&lt;ref&gt;{{cite web|last=Brewster|first=Tom|title=Heartbleed: 95% of detection tools 'flawed', claim researchers|url=http://www.theguardian.com/technology/2014/apr/16/heartbleed-bug-detection-tools-flawed|work=The Guardian|publisher=Guardian News and Media Limited|date=2014-04-16}}&lt;/ref&gt; The available tools include:

* Tripwire SecureScan&lt;ref&gt;{{cite web|url=http://www.tripwire.com/securescan/?home-banner/|title=Tripwire SecureScan|work=Tripwire - Take Control of IT Security and Regulatory Compliance with Tripwire Software|accessdate=October 7, 2014}}&lt;/ref&gt;
* AppCheck - static binary scan, from Codenomicon&lt;ref&gt;{{cite web|url=http://appcheck.codenomicon.com/|title=AppCheck - static binary scan, from Codenomicon|publisher=|accessdate=October 7, 2014}}&lt;/ref&gt;
* Arbor Network's Pravail Security Analytics&lt;ref&gt;{{cite web|url=http://www.arbornetworks.com/asert/2014/04/heartbleed/|title=Arbor Network's Pravail Security Analytics|publisher=|accessdate=October 7, 2014}}&lt;/ref&gt;
* Norton Safeweb Heartbleed Check Tool&lt;ref&gt;{{cite web|url=http://safeweb.norton.com/heartbleed|title=Norton Safeweb Heartbleed Check Tool|publisher=|accessdate=October 7, 2014}}&lt;/ref&gt;
* Heartbleed testing tool by a European IT security company&lt;ref&gt;{{cite web|url=http://possible.lv/tools/hb/ |title=Heartbleed OpenSSL extension testing tool, CVE-2014-0160 |publisher=Possible.lv |date= |accessdate=April 11, 2014}}&lt;/ref&gt;
* Heartbleed Scanner by Italian cryptologist Filippo Valsorda&lt;ref&gt;{{cite web|title=Test your server for Heartbleed (CVE-2014-0160)|url=https://filippo.io/Heartbleed/|accessdate=25 November 2014}}&lt;/ref&gt;
* Heartbleed Vulnerability Test by [[Cyberoam]]&lt;ref&gt;{{cite web|title=Cyberoam Security Center|url=http://csc.cyberoam.com/cyberoamsupport/webpages/webcat/2014-0160.jsp|accessdate=25 November 2014}}&lt;/ref&gt;
* Critical Watch Free Online Heartbleed Tester&lt;ref&gt;{{cite web|url=http://heartbleed.criticalwatch.com/ |title=Critical Watch :: Heartbleed Tester :: CVE-2014-0160 |publisher=Heartbleed.criticalwatch.com |date= |accessdate=April 14, 2014}}&lt;/ref&gt;
* [[Metasploit]] Heartbleed scanner module&lt;ref&gt;{{cite web|title=metasploit-framework/openssl_heartbleed.rb at master|url=https://github.com/rapid7/metasploit-framework/blob/master/modules/auxiliary/scanner/ssl/openssl_heartbleed.rb|accessdate=25 November 2014}}&lt;/ref&gt;
* Heartbleed Server Scanner by Rehmann&lt;ref&gt;{{cite web|title=OpenSSL Heartbeat Vulnerability Check (Heartbleed Checker)|url=http://rehmann.co/projects/heartbeat/|accessdate=25 November 2014}}&lt;/ref&gt;
* [[Lookout Mobile Security]] Heartbleed Detector, an app for [[Android (operating system)|Android]] devices that determines the OpenSSL version of the device and indicates whether the vulnerable heartbeat is enabled&lt;ref&gt;{{cite web|url=https://blog.lookout.com/blog/2014/04/09/heartbleed-detector/ |title=Heartbleed Detector: Check If Your Android OS Is Vulnerable with Our App |publisher=[[Lookout Mobile Security]] blog |date=April 9, 2014 |accessdate=April 10, 2014}}&lt;/ref&gt;
* Heartbleed checker hosted by [[LastPass]]&lt;ref&gt;{{cite web|url=https://lastpass.com/heartbleed/ |title=Heartbleed checker |publisher=LastPass |date= |accessdate=April 11, 2014}}&lt;/ref&gt;
* Online network range scanner for Heartbleed vulnerability by Pentest-Tools.com&lt;ref&gt;{{cite web|url=https://pentest-tools.com/vulnerability-scanning/openssl-heartbleed-scanner/ |title=OpenSSL Heartbleed vulnerability scanner :: Online Penetration Testing Tools &amp;#124; Ethical Hacking Tools |publisher=Pentest-tools.com |date= |accessdate=April 11, 2014}}&lt;/ref&gt;
* Official [[Red Hat]] offline scanner written in the Python language&lt;ref&gt;{{cite web |url=https://access.redhat.com/labs/heartbleed/heartbleed-poc.py |title=heartbleed-poc.py |last=Stafford |first=Jared |date=2014-04-14 |publisher=[[Red Hat|Red Hat, Inc]]}}&lt;/ref&gt;
* [[Qualys]] SSL Labs' SSL Server Test&lt;ref&gt;{{cite web|url=https://www.ssllabs.com/ssltest/|title=Qualys's SSL Labs' SSL Server Test|publisher=|accessdate=October 7, 2014}}&lt;/ref&gt; which not only looks for the Heartbleed bug, but can also find other SSL/TLS implementation errors.
* Browser extensions, such as Chromebleed&lt;ref&gt;{{cite web|url=https://chrome.google.com/webstore/detail/chromebleed/eeoekjnjgppnaegdjbcafdggilajhpic|title=Chromebleed|publisher=|accessdate=October 7, 2014}}&lt;/ref&gt; and FoxBleed&lt;ref&gt;{{cite web|url=https://addons.mozilla.org/en-US/firefox/addon/foxbleed/|title=FoxBleed|publisher=|accessdate=October 7, 2014}}&lt;/ref&gt;
* SSL Diagnos&lt;ref&gt;{{cite web|url=http://sourceforge.net/projects/ssldiagnos/|title=SSL Diagnos|work=SourceForge|accessdate=October 7, 2014}}&lt;/ref&gt;
* CrowdStrike Heartbleed Scanner&lt;ref&gt;{{cite web|url=http://www.crowdstrike.com/blog/new-community-tool-crowdstrike-heartbleed-scanner/|title=CrowdStrike Heartbleed Scanner|publisher=|accessdate=October 7, 2014}}&lt;/ref&gt; - Scans routers, printers and other devices connected inside a network including intranet web sites.&lt;ref&gt;{{cite web|last=Lynn |first=Samara |url=http://www.pcmag.com/article2/0,2817,2456909,00.asp |title=Routers, SMB Networking Equipment - Is Your Networking Device Affected by Heartbleed? |publisher=PCMag.com |date= |accessdate=2014-04-24}}&lt;/ref&gt;
* Netcraft Site Report&lt;ref&gt;{{cite web|url=http://toolbar.netcraft.com/site_report|title=Netcraft Site Report|publisher=|accessdate=October 7, 2014}}&lt;/ref&gt; - indicates whether a website's confidentiality could be jeopardized due to a past exploitation of Heartbleed by checking data from Netcraft's SSL Survey to determine whether a site offered the heartbeat TLS Extension prior to the Heartbleed disclosure. The Netcraft Extensions for Chrome, Firefox and Opera&lt;ref&gt;{{cite web|url=http://toolbar.netcraft.com/|title=Netcraft Extensions|publisher=|accessdate=October 7, 2014}}&lt;/ref&gt; also perform this check, whilst looking for potentially compromised certificates.&lt;ref&gt;{{cite web|url=http://news.netcraft.com/archives/2014/04/17/netcraft-releases-heartbleed-indicator-for-chrome-firefox-and-opera.html |title=Netcraft Releases Heartbleed Indicator For Chrome, Firefox and Opera |first=Paul |last=Mutton |publisher=[[Netcraft]] |date= June 24, 2014}}&lt;/ref&gt;

Other security tools have added support for finding this bug. For example, Tenable Network Security wrote a plugin for its [[Nessus (software)|Nessus]] vulnerability scanner that can scan for this fault.&lt;ref&gt;{{cite web|url=http://www.tenable.com/blog/tenable-facilitates-detection-of-openssl-vulnerability-using-nessus-and-nessus-perimeter |title=Tenable Facilitates Detection of OpenSSL Vulnerability Using Nessus and Nessus Perimeter Service |first=Jeffrey |last=Mann |publisher=Tenable Network Security |date= April 9, 2014}}&lt;/ref&gt; The [[Nmap]] security scanner includes a Heartbleed detection script from version 6.45.&lt;ref&gt;{{cite web|url=http://seclists.org/nmap-dev/2014/q2/64 |title=Nmap 6.45 Informal Release |date= April 12, 2014}}&lt;/ref&gt;

[[Sourcefire]] has released [[Snort (software)|Snort]] rules to detect Heartbleed attack traffic and possible Heartbleed response traffic.&lt;ref&gt;{{cite web|url=http://vrt-blog.snort.org/2014/04/heartbleed-memory-disclosure-upgrade.html |title=VRT: Heartbleed Memory Disclosure – Upgrade OpenSSL Now! |date=April 8, 2014}}&lt;/ref&gt; Open source packet analysis software such as [[Wireshark]] and [[tcpdump]] can identify Heartbleed packets using specific BPF packet filters that can be used on stored packet captures or live traffic.&lt;ref&gt;{{cite web|url=http://www.riverbed.com/blogs/Retroactively-detecting-a-prior-Heartbleed-exploitation-from-stored-packets-using-a-BPF-expression.html |title=Blogs &amp;#124; How to Detect a Prior Heartbleed Exploit |publisher=Riverbed |date=2014-04-09}}&lt;/ref&gt;

== Remediation ==

Vulnerability to Heartbleed is resolved by updating OpenSSL to a [[Patch (computing)|patched]] version (1.0.1g or later).  OpenSSL can be used either as a standalone program, a [[Library (computing)#Shared libraries|dynamic shared object]], or a [[Static library|statically-linked library]]; therefore, the updating process can require restarting processes loaded with a vulnerable version of OpenSSL as well as re-linking programs and libraries that linked it statically.  In practice this means updating packages that link OpenSSL statically, and restarting running programs to remove the in-memory copy of the old, vulnerable OpenSSL code.

After the vulnerability is patched, server administrators must address the potential breach of confidentiality.  Because Heartbleed allowed attackers to disclose [[Public-key cryptography|private keys]], they must be treated as compromised; keypairs must be regenerated, and [[Public key certificate|certificates]] that use them must be reissued; the old certificates must be [[Revocation list|revoked]].  Heartbleed also had the potential to allow disclosure of other in-memory secrets; therefore, other authentication material (such as [[Password|passwords]]) should also be regenerated.  It is rarely possible to confirm that a system which was affected has not been compromised, or to determine whether a specific piece of information was leaked.&lt;ref&gt;{{cite web|url=http://haydenjames.io/patched-servers-remain-vulnerable-heartbleed-openssl/ |title=Patched Servers Remain Vulnerable to Heartbleed OpenSSL &amp;#124; Hayden James |publisher=Haydenjames.io |date= |accessdate=April 10, 2014}}&lt;/ref&gt;

Since it is difficult or impossible to determine when a credential might have been compromised and how it might have been used by an attacker, certain systems may warrant additional remediation work even after patching the vulnerability and replacing credentials.  For example, signatures made by keys that were in use with a vulnerable OpenSSL version might well have been made by an attacker; this raises the possibility integrity has been violated, and opens signatures to [[Repudiation (cryptography)|repudiation]].  Validation of signatures and the legitimacy of other authentications made with a potentially compromised key (such as [[client certificate]] use) must be done with regard to the specific system involved.

=== Browser security certificate revocation awareness ===

Since Heartbleed threatened the privacy of private keys, users of a website which was compromised could continue to suffer from Heartbleed's effects until their browser is made aware of the certificate revocation or the compromised certificate expires.&lt;ref&gt;{{cite web|url=https://www.grc.com/revocation/implementations.htm |title=Security Certificate Revocation Awareness – Specific Implementations |publisher=Gibson Research Corporation |accessdate=2014-06-07}}&lt;/ref&gt;  For this reason, remediation also depends on users making use of browsers that have up-to-date certificate revocation lists (or [[Online Certificate Status Protocol|OCSP]] support) and honour certificate revocations.

== Root causes, possible lessons, and reactions ==

Although evaluating the total cost of Heartbleed is difficult, eWEEK estimated US$500 million as a starting point.&lt;ref&gt;{{cite web|author=Sean Michael Kerner| title=Heartbleed SSL Flaw's True Cost Will Take Time to Tally|url=http://www.eweek.com/security/heartbleed-ssl-flaws-true-cost-will-take-time-to-tally.html|work=[[eWEEK]]|date=2014-04-19}}&lt;/ref&gt;

[[David A. Wheeler]]'s paper ''How to Prevent the next Heartbleed'' analyzes why Heartbleed wasn't discovered earlier, and suggests several techniques which could have led to a faster identification, as well as techniques which could have reduced its impact. According to Wheeler, the most efficient technique which could have prevented Heartbleed is an atypical test suite thoroughly performing what he calls ''negative testing'', i.e. testing that invalid inputs cause failures rather than successes. Wheeler highlights that a single general-purpose test suite could serve as a base for all TLS implementations.&lt;ref name=&quot;wheeler&quot;&gt;{{cite web|last=A. Wheeler|first=David|title=How to Prevent the next Heartbleed|url=http://www.dwheeler.com/essays/heartbleed.html| date=2014-04-29}}&lt;/ref&gt;

According to an article on ''[[The Conversation (website)|The Conversation]]'' written by Robert Merkel, Heartbleed revealed a ''massive failure of risk analysis''. Merkel thinks OpenSSL gives more importance to performance than to security, which no longer makes sense in his opinion. But Merkel considers that OpenSSL should not be blamed as much as OpenSSL users, who chose to use OpenSSL, without funding better auditing and testing. Merkel explains that two aspects determine the risk that more similar bugs will cause vulnerabilities. One, the library's source code influences the risk of writing bugs with such an impact. Secondly, OpenSSL's processes affect the chances of catching bugs quickly. On the first aspect, Merkel mentions the use of the [[C (programming language)|C programming language]] as one risk factor which favored Heartbleed's appearance, echoing Wheeler's analysis.&lt;ref name=&quot;wheeler&quot; /&gt;&lt;ref&gt;{{cite web|last=Merkel|first=Robert|title=How the Heartbleed bug reveals a flaw in online security|url=https://theconversation.com/how-the-heartbleed-bug-reveals-a-flaw-in-online-security-25536|work=The Conversation|date=2014-04-11}}&lt;/ref&gt;

On the same aspect, [[Theo de Raadt]], founder and leader of the [[OpenBSD]] and [[OpenSSH]] projects, has criticized the OpenSSL developers for writing their own memory management routines and thereby, he claims, circumventing OpenBSD [[C standard library]] exploit countermeasures, saying &quot;OpenSSL is not developed by a responsible team.&quot;&lt;ref name=deraadt&gt;{{cite web|url=http://article.gmane.org/gmane.os.openbsd.misc/211963 |title=Re: FYA: http: heartbleed.com |publisher=Gmane |date= |accessdate=April 11, 2014}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://it.slashdot.org/story/14/04/10/1343236/theo-de-raadts-small-rant-on-openssl |title=Theo De Raadt's Small Rant On OpenSSL |publisher=Dice |work=Slashdot |date=2014-04-10}}&lt;/ref&gt; Following Heartbleed's disclosure, members of the OpenBSD project [[Fork (software development)|forked]] OpenSSL into [[LibreSSL]].&lt;ref name=&quot;fork&quot;&gt;{{cite web |url=http://www.undeadly.org/cgi?action=article&amp;sid=20140415093252&amp;mode=expanded |title= OpenBSD has started a massive strip-down and cleanup of OpenSSL |date=2014-04-15| work=OpenBSD journal}}&lt;/ref&gt;

The author of the change which introduced Heartbleed, Robin Seggelmann,&lt;ref&gt;{{cite web|author=Lia Timson |url=http://www.smh.com.au/it-pro/security-it/who-is-robin-seggelmann-and-did-his-heartbleed-break-the-internet-20140411-zqtjj.html |title=Who is Robin Seggelmann and did his Heartbleed break the internet? |date=April 11, 2014 |work=[[The Sydney Morning Herald]]}}&lt;/ref&gt; stated that he ''missed validating a variable containing a length'' and denied any intention to submit a flawed implementation.&lt;ref name=&quot;smh&quot; /&gt; Following Heartbleed's disclosure, Seggelmann suggested focusing on the second aspect, stating that OpenSSL is not reviewed by enough people.&lt;ref&gt;{{cite web|last=Williams|first=Chris|title=OpenSSL Heartbleed: Bloody nose for open-source bleeding hearts|url=http://www.theregister.co.uk/Print/2014/04/11/openssl_heartbleed_robin_seggelmann/|work=[[The Register]]|date=April 11, 2014}}&lt;/ref&gt; Although Seggelmann's work was reviewed by an OpenSSL core developer, the review was also intended to verify functional improvements, a situation making vulnerabilities much easier to miss.&lt;ref name=&quot;wheeler&quot; /&gt;

OpenSSL core developer [[Ben Laurie]] claimed that a security audit of OpenSSL would have caught Heartbleed.&lt;ref&gt;{{cite web|last=Smith|first=Gerry|title=How The Internet's Worst Nightmare Could Have Been Avoided|url=http://www.huffingtonpost.com/2014/04/10/heartbleed-bug_n_5120457.html|work=The Huffington Post|date=2014-04-10 |quote=The bug revealed this week was buried inside 10 lines of code and would have been spotted in an audit, according to Laurie, who works on the security team at Google.}}&lt;/ref&gt; Software engineer John Walsh commented: {{bq|Think about it, OpenSSL only has two [fulltime] people to write, maintain, test, and review 500,000 lines of business critical code.&lt;ref&gt;{{cite web | url=http://blog.ssh.com/free-can-make-you-bleed | title=Free Can Make You Bleed | publisher=ssh communications security | date=30 April 2014 | accessdate=11 September 2016 | author=John Walsh}}&lt;/ref&gt;}} The OpenSSL foundation's president, Steve Marquess, said &quot;The mystery is not that a few overworked volunteers missed this bug; the mystery is why it hasn't happened more often.&quot;&lt;ref&gt;{{cite web|last=Walsh|first=John|title=Free Can Make You Bleed|url=http://www.ssh.com/blog/makesyoubleed|publisher=SSH Communications Security|date=2014-04-30}}&lt;/ref&gt; David A. Wheeler described audits as an excellent way to find vulnerabilities in typical cases, but noted that &quot;OpenSSL uses unnecessarily complex structures, which makes it harder to both humans and machines to review.&quot; He wrote:
&lt;blockquote&gt;There should be a continuous effort to simplify the code, because otherwise just adding capabilities will slowly increase the software complexity. The code should be refactored over time to make it simple and clear, not just constantly add new features. The goal should be code that is “obviously right”, as opposed to code that is so complicated that “I can’t see any problems”.&lt;ref name=&quot;wheeler&quot; /&gt;&lt;/blockquote&gt;

LibreSSL made a big code cleanup, removing more than 90,000 lines of C code just in its first week.&lt;ref&gt;{{cite web |url=http://www.zdnet.com/openbsd-forks-prunes-fixes-openssl-7000028613/ |title= OpenBSD forks, prunes, fixes OpenSSL |first=Larry |last=Seltzer |work=Zero Day |publisher=[[ZDNet]] |date=April 21, 2014 |accessdate=April 21, 2014}}&lt;/ref&gt;

According to security researcher [[Dan Kaminsky]], Heartbleed is sign of an economic problem which needs to be fixed. Seeing the time taken to catch this simple error in a simple feature from a &quot;critical&quot; dependency, Kaminsky fears numerous future vulnerabilities if nothing is done. When Heartbleed was discovered, OpenSSL was maintained by a handful of volunteers, only one of whom worked full-time.&lt;ref&gt;{{cite web|last=Pagliery|first=Jose|title=Your Internet security relies on a few volunteers|url=http://money.cnn.com/2014/04/18/technology/security/heartbleed-volunteers/|work=CNNMoney|publisher=Cable News Network|date=2014-04-18}}&lt;/ref&gt; Yearly donations to the OpenSSL project were about US$2,000.&lt;ref name=&quot;nytimes&quot; /&gt; The Heartbleed website from Codenomicon advised money donations to the OpenSSL project.&lt;ref name=&quot;hb&quot;/&gt; After learning about donations for the 2 or 3 days following Heartbleed's disclosure totaling US$841, Kaminsky commented &quot;We are building the most important technologies for the global economy on shockingly underfunded infrastructure.&quot;&lt;ref&gt;{{cite web|last=Kaminsky|first=Dan|title=Be Still My Breaking Heart|url=http://dankaminsky.com/2014/04/10/heartbleed/|work=Dan Kaminsky's Blog|date=2014-04-10}}&lt;/ref&gt; Core developer Ben Laurie has qualified the project as &quot;completely unfunded&quot;.&lt;ref name=&quot;nytimes&quot; /&gt; Although the OpenSSL Software Foundation has no [[bug bounty program]], the Internet Bug Bounty initiative awarded US$15,000 to Google's Neel Mehta, who discovered Heartbleed, for his responsible disclosure.&lt;ref name=&quot;nytimes&quot;&gt;{{cite news|last=Perlroth|first=Nicole|title=Heartbleed Highlights a Contradiction in the Web|url=http://www.nytimes.com/2014/04/19/technology/heartbleed-highlights-a-contradiction-in-the-web.html?_r=0|work=The New York Times|publisher=The New York Times Company|date=2014-04-18}}&lt;/ref&gt;

Paul Chiusano suggested Heartbleed may have resulted from failed software economics.&lt;ref&gt;{{cite web|last1=Chiusano|first1=Paul|title=The failed economics of our software commons, and what you can about it right now|url=http://pchiusano.github.io/2014-12-08/failed-software-economics|website=Paul Chiusano's blog|date=2014-12-08}}&lt;/ref&gt;&lt;!-- Not about Heartbleed, but uses it and TLS libraries as main example --&gt;

The industry's collective response to the crisis was the [[Core Infrastructure Initiative]], a multimillion-dollar project announced by the [[Linux Foundation]] on April 24, 2014 to provide funds to critical elements of the global information infrastructure.&lt;ref name=&quot;cii&quot;&gt;{{cite web|title=Amazon Web Services, Cisco, Dell, Facebook, Fujitsu, Google, IBM, Intel, Microsoft, NetApp, Rackspace, VMware and The Linux Foundation Form New Initiative to Support Critical Open Source Projects|url=http://www.linuxfoundation.org/news-media/announcements/2014/04/amazon-web-services-cisco-dell-facebook-fujitsu-google-ibm-intel|publisher=The Linux Foundation|date=2014-04-24}}&lt;/ref&gt; Founding backers include Amazon, Dell, Facebook, Fujitsu, Google, IBM, Intel, Microsoft, NetApp, Rackspace, VMware and The Linux Foundation. The initiative intends to allow lead developers to work full-time on their projects and to pay for security audits, hardware and software infrastructure, travel, and other expenses.&lt;ref&gt;{{cite web|last=Paul|first=Ian|title=In Heartbleed's wake, tech titans launch fund for crucial open-source projects|url=http://www.pcworld.com/article/2147014/after-heartbleed-tech-giants-commit-to-supporting-critical-open-source-projects.html|work=PCWorld|date=2014-04-24}}&lt;/ref&gt; OpenSSL is a candidate to become the first recipient of the initiative's funding.&lt;ref name=&quot;cii&quot; /&gt;

== References ==
{{Reflist|30em}}

== External links ==
{{wikiversity|Managing risk from cyber attacks}}
{{commons category|Heartbleed bug}}
* [http://heartbleed.com/ Summary and Q&amp;A about the bug] by [[Codenomicon]] Ltd
* [http://heartbleed.ca/ Information for Canadian organizations and individuals]

{{Hacking in the 2010s}}
{{SSL/TLS}}

[[Category:2014 in computer science]]
[[Category:Internet security]]
[[Category:Software bugs]]
[[Category:Transport Layer Security]]</text>
      <sha1>n8vdl0dxnx4ou05lgq5h8itmbh3iuk5</sha1>
    </revision>
  </page>
</mediawiki>
