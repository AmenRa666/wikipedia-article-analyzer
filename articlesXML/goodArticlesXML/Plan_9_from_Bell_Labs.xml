<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.29.0-wmf.3</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Plan 9 from Bell Labs</title>
    <ns>0</ns>
    <id>24226</id>
    <revision>
      <id>750293152</id>
      <parentid>750278322</parentid>
      <timestamp>2016-11-18T22:11:55Z</timestamp>
      <contributor>
        <username>AnomieBOT</username>
        <id>7611264</id>
      </contributor>
      <minor/>
      <comment>Dating maintenance tags: {{Huh}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="47551">{{good article}}
{{Infobox OS
|name                   = Plan 9 from Bell Labs
|logo                   = [[File:Plan9bunnysmblack.jpg|Glenda, the Plan 9 Bunny]]
|logo caption           = Glenda, the Plan 9 Bunny, drawn by [[Renée French]]&lt;ref&gt;{{cite web|url = https://9p.io/plan9/glenda.html|title = Glenda, the Plan 9 Bunny |accessdate = 2008-12-02|last = [[Lucent Technologies]]|authorlink = |year = 2006}}&lt;/ref&gt; 
|screenshot             = Plan 9 from Bell Labs (Installation).png
|caption                = Installation of Plan 9
|developer              = [[Bell Labs]]
|source model           = [[Open source]]
|supported platforms    = [[x86 architecture|x86]] / [[Vx32]], [[x86-64]], [[MIPS architecture|MIPS]], [[DEC Alpha]], [[SPARC]], [[PowerPC]], [[ARM architecture|ARM]]
|kernel type            = [[Hybrid kernel]]
|ui                     = [[rio (windowing system)|rio]] / [[rc]]
|family                 =
|released               = {{nowrap|1992 (universities) /}} {{nowrap|1995 (general public)}}
|latest release version = Fourth Edition
|latest release date    = daily
|marketing target       =
|programmed in          = Dialect of [[ANSI C]]
|prog language          =
|language               = English
|updatemodel            = [[replica (Plan 9)|replica]]
|package manager        =
|working state          = Current
|license                = dual license ({{nowrap|[[GNU General Public License|GNU GPLv2]]}} and {{nowrap|[[Lucent Public License]]}} (with few minor exceptions&lt;ref&gt;http://akaros.cs.berkeley.edu/files/Plan9License&lt;/ref&gt;))
|website                = {{nowrap|{{URL|https://9p.io/plan9/}}}}
|influenced by          = ([[Research Unix|Research]]) Unix, [[Cambridge Distributed Computing System]]{{r|design-paper}}
|succeeded by           = [[Inferno (operating system)|Inferno]]
}}
'''Plan 9 from Bell Labs''' is a [[distributed operating system]], originally developed by the Computing Sciences Research Center at [[Bell Labs]] between the mid-1980s and 2002. It takes some of the principles of [[Unix]], developed in the same research group, but extends these to a networked environment with [[graphical user interface|graphical terminals]].

In Plan 9, virtually all computing resources, including files, network connections, and peripheral devices, are represented through the file system rather than specialized interfaces. A unified network protocol called [[9P (protocol)|9P]] ties a network of computers running Plan 9 together, allowing them to share all resources so represented.

The name ''Plan 9 from Bell Labs'' is a reference to the [[Ed Wood]] 1959 cult [[science fiction]] [[Z-movie]] ''[[Plan 9 from Outer Space]]''.&lt;ref name=&quot;taoup&quot; /&gt;  Also, Glenda, the Plan 9 Bunny, is presumably a reference to Wood's film ''[[Glen or Glenda]]''. The system continues to be used and developed by operating system researchers and hobbyists.&lt;ref name=&quot;9front-announcement&quot; /&gt;&lt;ref name=&quot;9atom-home&quot; /&gt;

== History ==
Plan 9 from Bell Labs was originally developed, starting mid-1980s, by members of the Computing Science Research Center at Bell Labs, the same group that originally developed [[Unix]] and [[C (programming language)|C]].&lt;ref name=&quot;creators&quot; /&gt; The Plan 9 team was initially led by [[Rob Pike]], [[Ken Thompson (computer programmer)|Ken Thompson]], Dave Presotto and Phil Winterbottom, with support from [[Dennis Ritchie]] as head of the Computing Techniques Research Department.  Over the years, many notable developers have contributed to the project including [[Brian Kernighan]], [[Tom Duff]], [[Doug McIlroy]], [[Bjarne Stroustrup]] and [[Bruce Ellis]].&lt;ref name=&quot;developers&quot; /&gt;

Plan 9 replaced Unix as Bell Labs's primary platform for operating systems research. It explored several changes to the original Unix model that facilitate the use and programming of the system, notably in distributed [[multi-user]] environments. After several years of development and internal use, Bell Labs shipped the operating system to universities in 1992. Three years later, in 1995, Plan 9 was made available for commercial parties by AT&amp;T via the book publisher [[Harcourt Brace]]. With source licenses costing $350, AT&amp;T targeted the embedded systems market rather than the computer market at large; Ritchie commented that the developers did not expect to do &quot;much displacement&quot; given how established other operating systems had become.&lt;ref&gt;{{cite news |newspaper=[[InfoWorld]] |first=Yvonne L. |last=Lee |title=AT&amp;T Bell Labs ships Plan 9 OS for embedded systems |url=https://books.google.com/books?id=3joEAAAAMBAJ&amp;pg=PA16 |date=24 July 1995}}&lt;/ref&gt;

By early 1996, the Plan 9 project had been &quot;put on the back burner&quot; by AT&amp;T in favor of [[Inferno (operating system)|Inferno]], intended to be a rival to [[Sun Microsystems]]' [[Java (software platform)|Java platform]].&lt;ref&gt;{{cite news |title=AT&amp;T reveals plans for Java competitor |url=https://books.google.com/books?id=xT4EAAAAMBAJ&amp;pg=PA3 |newspaper=InfoWorld |first=Jason |last=Pontin |date=19 February 1996 |page=3}}&lt;/ref&gt;
In the late 1990s, Bell Labs' new owner [[Lucent Technologies]] dropped commercial support for the project and in 2000, a third release was distributed under an [[open source]] license. A fourth release under a new [[free software]] license occurred in 2002.&lt;ref name=&quot;osnews-4th-edition-release&quot; /&gt;

A user and development community, including current and former [[Bell Labs]] personnel, produced minor daily releases in form of [[ISO image]]s. Bell Labs hosted the development.&lt;ref name=&quot;how-to-contribute&quot; /&gt; The development source tree is accessible over the 9P and [[Hypertext Transfer Protocol|HTTP]] protocols and is used to update existing installations.&lt;ref name= &quot;staying-up-to-date&quot; /&gt; In addition to the official components of the OS included in the ISOs, Bell Labs also hosts a repository of externally developed applications and tools.&lt;ref&gt;{{cite web|url=https://9p.io/plan9/addons.html|title=Plan 9 — Additional Software|date=2009|accessdate=2016-03-06}}&lt;/ref&gt;

{| class=&quot;wikitable&quot; border=&quot;1&quot;
|-
! Date
! Release
! Comment
|-
| 1992
| Plan 9 1st edition
| Released by Bell Labs to universities
|-
| 1995
| Plan 9 2nd edition
| Released by Bell Labs for non-commercial purposes&lt;ref name=&quot;firstpublic&quot; /&gt;
|-
| 2000
| Plan 9 3rd ed. (''Brazil'')
| Released by Lucent Technologies under an open source license
|-
| 2002
| Plan 9 4th edition
| Released by Lucent Technologies under a new free software license
|}

== Design concepts ==
{{quote box|
 |quote = Plan 9 from Bell Labs is like the [[Quakers]]: distinguished by its stress on the 'Inner Light,' noted for simplicity of life, in particular for plainness of speech. Like the Quakers, Plan 9 does not proselytize.
 |source = —Sape J. Mullender, Pierre G. Janson.&lt;br/&gt;''Real Time in a Real Operating System''&lt;ref name = &quot;HerbertJones2004&quot; /&gt;
 |align = right
 |width = 33%
 |salign = right}}
Plan 9 is a [[distributed operating system]], designed to make a network of [[Heterogeneous computing|heterogeneous]] and geographically separated computers function as a single system.&lt;ref name = &quot;reinventing-unix&quot; /&gt; In a typical Plan 9 installation, users work at terminals running the window system [[rio (windowing system)|rio]], and they access CPU servers which handle computation-intensive processes. Permanent data storage is provided by additional network hosts acting as file servers and archival storage.&lt;ref name= &quot;distributed-system&quot; /&gt;

Its designers state that:

{{quote|[t]he foundations of the system are built on two ideas: a per-process [[namespace|name space]] and a simple message-oriented file system protocol.|Pike ''et al.''{{r|use-of-namespaces}}}}

The first idea means that, unlike on most operating systems, [[Process (computing)|processes]] (running programs) each have their own view of the ''namespace'', corresponding to what other operating systems call the file system; a single path name may refer to different resources for different processes. The potential complexity of this setup is controlled by a set of conventional locations for common resources.{{r|welch}}{{r|man4namespace}}

The second idea means that processes can offer their services to other processes by providing virtual files that appear in the other processes' namespace. The [[Client–server model|client]] process's input/output on such a file becomes [[inter-process communication]] between the two processes. This way, Plan 9 generalizes the Unix notion of the [[Unix filesystem|filesystem]] as the central point of access to computing resources. It carries over Unix's idea of [[device file]]s to provide access to peripheral devices ([[computer mouse|mice]], removable media, etc.) and the possibility to [[mount (Unix)|mount]] filesystems residing on physically distinct filesystems into a hierarchical namespace, but adds the possibility to mount a connection to a server program that speaks a standardized protocol and treat its services as part of the namespace.

For example, the original window system, called 8½, exploited these possibilities as follows. Plan 9 represents the user interface on a terminal by means of three pseudo-files: {{mono|mouse}}, which can be read by a program to get notification of mouse movements and button clicks, {{mono|cons}}, which can be used to perform textual input/output, and {{mono|bitblt}}, writing to which enacts graphics operations (see [[bit blit]]). The window system multiplexes these devices: when creating a new window to run some program in, it first sets up a new namespace in which {{mono|mouse}}, {{mono|cons}} and {{mono|bitblt}} are connected to itself, hiding the actual device files to which it itself has access. The window system thus receives all input and output commands from the program and handles these appropriately, by sending output to the actual screen device and giving the currently focused program the keyboard and mouse input.{{r|distributed-system}} The program does not need to know if it is communicating directly with the operating system's device drivers, or with the window system; it only has to assume that its namespace is set up so that these special files provide the kind of input and accept the kind of messages that it expects.

Plan 9's distributed operation relies on the per-process namespaces as well, allowing client and server processes to communicate across machines in the way just outlined. For example, the {{mono|cpu}} command starts a remote session on a compute server. The command exports part of its local namespace, including the user's terminal's devices ({{mono|mouse}}, {{mono|cons}}, {{mono|bitblt}}), to the server, so that remote programs can perform input/output using the terminal's mouse, keyboard and display, combining the effects of remote login and a shared network filesystem.{{r|distributed-system}}{{r|use-of-namespaces}}

=== 9P protocol ===
{{Main article |9P (protocol)}}

All programs that wish to provide services-as-files to other programs speak a unified protocol, called 9P. Compared to other systems, this reduces the number of custom [[application programming interface|programming interfaces]]. 9P is a generic, medium-agnostic, [[byte-oriented]] protocol that provides for messages delivered between a server and a client.&lt;ref name=&quot;unix-spirit-set-free&quot; /&gt; The protocol is used to refer to and communicate with processes, programs, and data, including both the user interface and the network.&lt;ref name=&quot;not_dead&quot; /&gt; With the release of the 4th edition, it was modified and renamed 9P2000.&lt;ref name=&quot;osnews-4th-edition-release&quot; /&gt;

Unlike most other operating systems, Plan 9 does not provide special [[application programming interface]]s (such as [[Berkeley sockets]], [[X resources]] or [[ioctl]] system calls) to access devices.&lt;ref name=&quot;unix-spirit-set-free&quot; /&gt; Instead, Plan 9 device drivers implement their control interface as a file system, so that the hardware can be accessed by the ordinary file [[input/output]] operations ''read'' and ''write''. Consequently, sharing the device across the network can be accomplished by mounting the corresponding directory tree to the target machine.&lt;ref name=&quot;taoup&quot; /&gt;

=== Union directories and namespaces ===
Plan 9 allows the user to collect the files (called ''names'') from different directory trees in a single location. The resulting ''[[Union (set theory)|union]] directory'' behaves as the concatenation of the underlying directories (the order of concatenation can be controlled); if the constituent directories contain files having the same name, a listing of the union directory ({{mono|ls}} or {{mono|lc}}) will simply report duplicate names.{{r|valerie-aurora}} Resolution of a single path name is performed top-down: if the directories {{mono|top}} and {{mono|bottom}} are unioned into {{mono|u}} with {{mono|top}} first, then {{mono|u/name}} denotes {{mono|top/name}} if it exists, {{mono|bottom/name}} only if it exists ''and {{mono|top/name}} does not exist'', and no file if neither exists. No recursive unioning of subdirectories is performed, so if {{mono|top/subdir}} exists, the files in {{mono|bottom/subdir}} are not accessible through the union.{{r|4.4bsd}}

A union directory can be created by using the {{mono|bind}} command:

&lt;source&gt;
; bind /arm/bin /bin
; bind -a /usr/inferno/Plan9/arm/bin /bin
; bind -b /usr/alice/bin /bin
&lt;/source&gt;

In the example above, {{mono|/arm/bin}} is mounted at {{mono|/bin}}, the contents of {{mono|/arm/bin}} replacing the previous contents of {{mono|/bin}}. [[Inferno (operating system)|Inferno]]'s{{huh|this is unnecessarily confusing a user directory with an OS|date=November 2016}} {{mono|bin}} directory is then union mounted after {{mono|/bin}}, and Alice's personal {{mono|bin}} directory is union mounted before. When a file is requested from {{mono|/bin}}, it is first looked for in {{mono|/usr/alice/bin}}, then in {{mono|/arm/bin}}, and then finally in {{mono|/usr/inferno/Plan9/arm/bin}}.

The separate process namespaces thus replace the notion of a [[PATH (variable)|search path]] in the shell. Where Unix shells have a list of directories to search for programs when given a command, the Plan 9 shell only looks in the directory {{mono|/bin}}; adding commands is done by binding several directories together to appear as a single {{mono|/bin}}.&lt;ref name= &quot;distributed-system&quot; /&gt;

Furthermore, the kernel can keep separate mount tables for each process,&lt;ref name=&quot;HerbertJones2004&quot;/&gt; and can thus provide each process with its own file system [[namespace]]. Processes' namespaces can be constructed independently, and the user may work simultaneously with programs that have heterogeneous namespaces.&lt;ref name = &quot;use-of-namespaces&quot; /&gt; Namespaces may be used to create an isolated environment similar to [[chroot]], but in a more secure way.&lt;ref name=&quot;unix-spirit-set-free&quot; /&gt;

Plan 9's union directory architecture inspired [[4.4BSD]] and [[Linux]] [[union mount|union file system]] implementations,{{r|valerie-aurora}} although the developers of the BSD union mounting facility found the non-recursive merging of directories in Plan 9 &quot;too restrictive for general purpose use&quot;.{{r|4.4bsd}}
{{clear}}

=== Special virtual filesystems ===

==== /proc ====
[[File:Plan 9 from Bell Labs (process management).png|thumb|right|Listing processes with [[ls|list contents of directory (ls, lc) command]]&lt;ref name=&quot;unix-plan9-command-translation&quot; /&gt; in {{mono|/proc}}]]
{{Main article |procfs}}
Instead of having system calls specifically for [[process management (computing)|process management]], Plan 9 provides the {{mono|/proc}} file system. Each [[Process (computing)|process]] appears as a directory containing information and control files which can be manipulated by the ordinary file IO system calls.&lt;ref name = &quot;intro-abstractions&quot; /&gt;

The file system approach allows Plan 9 processes to be managed with simple file management tools such as [[ls]] and [[cat (Unix)|cat]]; however, the processes cannot be copied and moved as files.&lt;ref name=&quot;design-paper&quot; /&gt;

==== /net ====
Plan 9 does not have specialised system calls or [[ioctl]]s for accessing the networking stack or networking hardware. Instead, the {{mono|/net}} file system is used. Network connections are controlled by reading and writing control messages to control files.  Sub-directories such as {{mono|/net/tcp}} and {{mono|/net/udp}} are used as an interface to their respective protocols.&lt;ref name=&quot;design-paper&quot; /&gt;

=== Unicode ===
{{further|UTF-8|Comparison of Unicode encodings}}
To reduce the complexity of managing [[character encoding]]s, Plan 9 uses [[Unicode]] throughout the system. The initial Unicode implementation was [[ISO 10646]]. [[Ken Thompson (computer programmer)|Ken Thompson]] invented UTF-8, which became the [[native (computing)|native]] encoding in Plan 9. The entire system was converted to general use in 1992.&lt;ref name= &quot;utf8&quot; /&gt; UTF-8 preserves backwards compatibility with traditional [[null terminated string]]s, enabling more reliable information processing and the chaining of multilingual string data with [[Unix pipe]]s between multiple processes.  Using a single UTF-8 encoding with characters for all cultures and regions eliminates the need for switching between code sets.&lt;ref name=&quot;Lunde1999&quot; /&gt;

=== Combining the design concepts ===
Though interesting on their own, the design concepts of Plan 9 were supposed to be most useful when combined together. For example, to implement a [[network address translation]] (NAT) server, a union directory can be created, overlaying the [[router (computing)|router]]'s {{mono|/net}} directory tree with its own {{mono|/net}}. Similarly, a [[virtual private network]] (VPN) can be implemented by overlaying in a union directory a {{mono|/net}} hierarchy from a remote [[gateway (telecommunications)|gateway]], using secured 9P over the public Internet. A union directory with the {{mono|/net}} hierarchy and filters can be used to [[sandbox (computer security)|sandbox]] an untrusted application or to implement a [[Firewall (computing)|firewall]].&lt;ref name=&quot;unix-spirit-set-free&quot; /&gt; In the same manner, a distributed computing network can be composed with a union directory of {{mono|/proc}} hierarchies from remote hosts, which allows interacting with them as if they are local.

When used together, these features allow for assembling a complex distributed computing environment by reusing the existing hierarchical name system.&lt;ref name=&quot;design-paper&quot; /&gt;

== Software for Plan 9 ==
{{further|List of Plan 9 applications}}
As a benefit from the system's design, most tasks in Plan 9 can be accomplished by using [[ls]], [[Cat (Unix)|cat]], [[grep]], [[cp (Unix)|cp]] and [[rm (Unix)|rm]] utilities in combination with the [[rc shell]] (the default Plan 9 shell).

[[Factotum (software)|Factotum]] is an [[authentication server|authentication]] and [[key management]] server for Plan 9. It handles authentication on behalf of other programs such that both [[secret key]]s and implementation details need only be known to Factotum.&lt;ref name=&quot;auth-paper&quot; /&gt;

=== Graphical programs ===
[[File:Plan 9 from Bell Labs (with acme).png|thumb|right|Plan 9 running [[acme (text editor)|acme]] and rc]]
Unlike [[Unix]], Plan 9 was designed with graphics in mind.&lt;ref name=&quot;not_dead&quot; /&gt; After booting, a Plan 9 terminal will run the [[rio (windowing system)|rio]] windowing system, in which the user can create new windows displaying [[rc]].&lt;ref name=&quot;osnews-investigating&quot; /&gt; Graphical programs invoked from this shell replace it in its window.

The [[plumber (Plan 9)|plumber]] provides an [[inter-process communication]] mechanism which allows system-wide hyperlinking.

[[sam (text editor)|Sam]] and [[acme (text editor)|acme]] are Plan 9's text editors.&lt;ref name=&quot;usethis-interview-russ-cox&quot; /&gt;

=== Storage system ===
Plan 9 supports the Kfs, Paq, Cwfs, [[File Allocation Table|FAT]], and [[Fossil (file system)|Fossil]] file systems. The last was designed at Bell Labs specifically for Plan 9 and provides snapshot storage capability. It can be used directly with a hard drive or backed with [[Venti]], an archival file system and permanent data storage system.

=== Software development ===
The distribution package for Plan 9 includes special compiler variants and programming languages, and provides a tailored set of libraries along with a windowing [[user interface]] system specific to Plan 9.&lt;ref name=&quot;Dixon2004&quot; /&gt; The bulk of the system is written in a dialect of C ([[ANSI C]] with some extensions and some other features left out). The compilers for this language were custom built with portability in mind; according to their author, they &quot;compile quickly, load slowly, and produce medium quality object code&quot;.&lt;ref name=&quot;auug-new-c-compiler&quot; /&gt;

A [[concurrent programming language]] called [[Alef (programming language)|Alef]] was available in the first two editions, but was then dropped for maintenance reasons and replaced by a [[Thread (computing)|threading]] library for C.&lt;ref&gt;{{cite web|last=Pike|first=Rob|title=Rio: Design of a Concurrent Window System|url=http://doc.cat-v.org/plan_9/3rd_edition/rio/rio_slides.pdf|accessdate=8 March 2013}}&lt;/ref&gt;&lt;ref&gt;{{man|2|thread|Plan 9}}&lt;/ref&gt;

=== Unix compatibility ===
Though Plan 9 was supposed to be a further development of Unix concepts, compatibility with preexisting Unix software was never the goal for the project. Many [[command line]] utilities of Plan 9 share the names of Unix counterparts, but work differently.&lt;ref name=&quot;unix-plan9-command-translation&quot; /&gt;

Plan 9 can support [[POSIX]] applications and can emulate the [[Berkeley socket interface]] through the [[ANSI/POSIX Environment]] (APE) that implements an [[runtime environment|interface]] close to [[ANSI C]] and [[POSIX]], with some common extensions (the native Plan 9 C interfaces conform to neither standard). It also includes a POSIX-compatible shell. APE's authors claim to have used it to port the [[X Window System]] (X11) to Plan 9, although they do not ship X11 &quot;because supporting it properly is too big a job&quot;.&lt;ref name=&quot;docs-ape&quot; /&gt; Some Linux binaries can be used with the help of a &quot;linuxemu&quot; (Linux emulator) application; however, it is still a work in progress.&lt;ref name=&quot;linuxemu&quot; /&gt; Vice versa, the [[vx32]] virtual machine allows a slightly modified Plan 9 kernel to run as a user process in Linux, supporting unmodified Plan 9 programs.{{r|vx32}}

== Reception ==

=== Comparison to contemporary operating systems ===
In 1991, Plan 9's designers compared their system to other early nineties operating systems in terms of size, showing that the source code for a minimal (&quot;working, albeit not very useful&quot;) version was less than one-fifth the size of a [[Mach (kernel)|Mach]] [[microkernel]] without any device drivers (5899 or 4622 [[lines of code]] for Plan 9, depending on metric, vs. 25530 lines). The complete kernel comprised 18000 lines of code.{{r|distributed-system}} (According to a 2006 count, the kernel was then some 150,000 lines, but this was compared against more than 4.8 million in [[Linux]].{{r|unix-spirit-set-free}})

Within the operating systems research community, as well as the commercial Unix world, other attempts at achieving distributed computing and remote filesystem access were made concurrently with the Plan 9 design effort. These included the [[Network File System]] and the associated [[vnode]] architecture developed at [[Sun Microsystems]], and more radical departures from the Unix model such as the [[Sprite (operating system)|Sprite]] OS from [[University of California, Berkeley|UC Berkeley]]. Sprite developer Welch points out that the SunOS vnode architecture is limited compared to Plan 9's capabilities in that it does not support remote device access and remote inter-process communication cleanly, even though it could have, had the preexisting [[UNIX domain sockets]] (which &quot;can essentially be used to name user-level servers&quot;) been integrated with the vnode architecture.{{r|welch}}

One critique of the &quot;everything is a file&quot;, communication-by-textual-message design of Plan 9 pointed out limitations of this paradigm compared to the [[static typing|typed]] interfaces of Sun's [[object-oriented operating system]], [[Spring (operating system)|Spring]]:

{{quote|Plan 9 constrains everything to look like a file. In most cases the real interface type comprises the protocol of messages that must be written to, and read from, a file descriptor. This is difficult to specify and document, and prohibits any automatic [[type checking]] at all, except for file errors at run time. (...)

[A] path name relative to a process' implicit root context is the ''only'' way to name a service. Binding a name to an object can only be done by giving an existing name for the object, in the same context as the new name. As such, interface references simply ''cannot'' be passed between processes, much less across networks. Instead, communication has to rely on conventions, which are prone to error and do not scale.|Roscoe; emphasis in the original.{{r|roscoe}}}}

A later retrospective comparison of Plan 9, Sprite and a third contemporary distributed research operating system, [[Amoeba (operating system)|Amoeba]], found that

{{quote|the environments they [Amoeba and Sprite] build are tightly coupled within the OS, making communication with external services difficult. Such systems suffer from the radical departure from the UNIX model, which also discourages portability of already existing software to the platform (...). The lack of developers, the very small range of supported hardware and the small, even compared to Plan 9, user base have also significantly slowed the adoption of those systems (...). In retrospect, Plan 9 was the only research distributed OS from that time which managed to attract developers and be used in commercial projects long enough to warrant its survival to this day.|Mirtchovski, Simmonds and Minnich{{r|integrated}}}}

=== Impact ===
[[File:Wmii-3.6 screenshot.png|thumb|right|The [[wmii]] [[X window manager]] was inspired by [[acme (text editor)|acme]], a text editor from the Plan 9 project.&lt;ref name=&quot;wmii&quot; /&gt;]]
Plan 9 demonstrated that an integral concept of Unix—that every system interface could be represented as a set of files—could be successfully implemented in a modern distributed system.&lt;ref name=&quot;osnews-investigating&quot; /&gt; Some features from Plan 9, like the UTF-8 character encoding of Unicode, have been implemented in other operating systems. Unix-like operating systems such as Linux have implemented 9P, Plan 9's file system, and have adopted features of [[rfork]], Plan 9's process creation mechanism.{{r|opensources}} Additionally, in [[Plan 9 from User Space]], several of Plan 9's applications and tools, including the sam and acme editors, have been ported to Unix and Linux systems and have achieved some level of popularity. Several projects seek to replace the [[GNU]] operating system programs surrounding the Linux kernel with the Plan 9 operating system programs.&lt;ref name=&quot;glendix&quot; /&gt;&lt;ref name=&quot;gentoo&quot; /&gt; The [[9wm]] [[X window manager|window manager]] was inspired by [[8½ (Plan 9)|8½]], the older windowing system of Plan 9;&lt;ref name=&quot;9wm&quot; /&gt; [[wmii]] is also heavily influenced by Plan 9.&lt;ref name=&quot;wmii&quot; /&gt;
In computer science research, Plan 9 has been used as a [[grid computing]] platform{{r|9grid}}{{r|integrated}} and as a vehicle for research into [[ubiquitous computing]] without [[middleware]].{{r|ubiquitous}}

However, Plan 9 has never approached Unix in popularity, and has been primarily a research tool:
{{quote|[I]t looks like Plan 9 failed simply because it fell short of being a compelling enough improvement on Unix to displace its ancestor. Compared to Plan 9, Unix creaks and clanks and has obvious rust spots, but it gets the job done well enough to hold its position. There is a lesson here for ambitious system architects: the most dangerous enemy of a better solution is an existing codebase that is just good enough.|[[Eric S. Raymond]]&lt;ref name=&quot;taoup&quot; /&gt;}}

Other factors that contributed to low adoption of Plan 9 include the lack of commercial backup, the low number of end-user applications, and the lack of [[device driver]]s.&lt;ref name=&quot;osnews-investigating&quot; /&gt;&lt;ref name=&quot;usethis-interview-russ-cox&quot; /&gt;

Plan 9 proponents and developers claim that the problems hindering its adoption have been solved, that its original goals as a distributed system, development environment, and research platform have been met, and that it enjoys moderate but growing popularity.{{Citation needed|date=October 2015}} [[Inferno (operating system)|Inferno]], through its hosted capabilities, has been a vehicle for bringing Plan 9 technologies to other systems as a hosted part of heterogeneous computing grids.&lt;ref name=&quot;vitanuova-grid&quot; /&gt;&lt;ref name=&quot;rutgers&quot; /&gt;&lt;ref name=&quot;york&quot; /&gt;

Several projects work to extend Plan 9, including 9atom and 9front. These [[fork (software)|fork]]s augment Plan 9 with additional [[hardware driver]]s and software, including an improved version of the Upas [[e-mail]] system, the [[go (programming language)|go]] compiler, [[Mercurial (software)|Mercurial]] [[version control system]] support, and other programs.&lt;ref name=&quot;9atom-home&quot; /&gt;&lt;ref name=&quot;9front&quot; /&gt; Plan 9 was [[porting|ported]] to the [[Raspberry Pi]] single-board computer.&lt;ref name=&quot;rasppi&quot;/&gt;&lt;ref name=&quot;raspinst&quot;/&gt; The Harvey project attempts to replace the custom Plan 9 C compiler with [[GNU Compiler Collection|GCC]], to leverage modern development tools such as [[GitHub]] and [[Coverity]] and speed up development.{{r|harvey}}

==== Derivatives and forks ====
[[Inferno (operating system)|Inferno]] is a descendant of Plan 9, and shares many design concepts and even source code in the kernel, particularly around devices and the Styx/9P2000 protocol.
Inferno shares with Plan 9 the Unix heritage from Bell Labs and the [[Unix philosophy]]. Many of the command line tools in Inferno were Plan 9 tools that were translated to Limbo.

''9atom''&lt;ref&gt;{{cite web|url=http://www.9atom.org/|title=9atom|publisher=}}&lt;/ref&gt; augments the Plan 9 distribution with the addition of a 386 [[Physical Address Extension|PAE]] kernel, an amd64 cpu and terminal kernel, nupas, extra pc hardware support, IL and Ken's fs.

''9front''&lt;ref&gt;{{cite web|url=http://9front.org/|title=9FRONT.ORG THE PLAN FELL OFF|publisher=}}&lt;/ref&gt; is a fork of Plan 9. It was started to remedy a perceived lack of devoted development resources inside Bell Labs, and has accumulated various fixes and improvements.

''9legacy''&lt;ref&gt;{{cite web|url=http://www.9legacy.org/|title=9legacy|publisher=}}&lt;/ref&gt; is an alternative distribution. It includes a set of patches based on the current Plan 9 distribution.

''Akaros''&lt;ref&gt;http://akaros.cs.berkeley.edu&lt;/ref&gt; is designed for many-core architectures and large-scale SMP systems.

''Harvey OS''&lt;ref&gt;{{cite web|url=https://harvey-os.org/|title=Harvey OS|publisher=}}&lt;/ref&gt;  is an effort to get the Plan 9 code working with gcc and clang.

== License ==
Starting with the release of Fourth edition on April 2002,&lt;ref name=&quot;osnews-4th-edition-release&quot; /&gt; the full source code of Plan 9 from Bell Labs was freely available under [[Lucent Public License]] 1.02, which is considered to be [[open source]] license by the [[Open Source Initiative]] (OSI), [[free software]] license by the [[Free Software Foundation]], and it passes the [[Debian Free Software Guidelines]].&lt;ref name=&quot;unix-spirit-set-free&quot; /&gt;

In February 2014, the [[University of California, Berkeley]], has been authorized by the current Plan 9 [[copyright holder]] – [[Alcatel-Lucent]] – to release all Plan 9 software previously governed by the Lucent Public License, Version 1.02 under the [[GNU General Public License]], Version 2.&lt;ref name=&quot;theregister-gpl-release&quot; /&gt;


== See also ==
{{Portal|Open-source software}}
* [[Alef (programming language)]]
* [[Rendezvous (Plan 9)]]
* [[Inferno (operating system)]]

== References ==
{{Reflist|30em|refs=
&lt;!-- Please keep the refs in alphabetical order --&gt;
&lt;!-- ref name= &quot;bluegene&quot;&gt;{{cite web |url=http://go.cs.bell-labs.com/fastos/doc/lanl.bglport.pdf |format = [[PDF]] | title =Plan9 BG Presentation |first=Ron |last=Minnich |work=[[Los Alamos National Laboratory]] | accessdate = 2011-11-30}}&lt;/ref --&gt;
&lt;!--ref name=&quot;computing-systems&quot;&gt;{{cite journal |url=https://books.google.com/books?id=tVtVAAAAMAAJ |title = [[USENIX]], EUUG | pages= 233–36 | journal = Computing systems: the journal of the USENIX Association | date = 1995 | publisher=[[University of California Press]] |accessdate= 2011-12-25}}&lt;/ref--&gt;
&lt;ref name=&quot;9atom-home&quot;&gt;{{cite web |url=http://www.quanstro.net/plan9/9atom/ |title= 9atom |accessdate = 2011-11-11}}&lt;/ref&gt;
&lt;ref name=&quot;9front&quot;&gt;{{cite web |url=https://code.google.com/p/plan9front/ |title=plan9front – the front fell off | accessdate = 2011-12-01}}&lt;/ref&gt;
&lt;ref name=&quot;9front-announcement&quot;&gt;{{cite web |url= http://www.osnews.com/story/24957/Plan_9_Forked_Continues_as_9front |title= Plan 9 Forked, Continues as 9front |first= James |last= Robertson | work =[[OSNews]] |date=2011-07-16 |accessdate= 2011-12-31}}&lt;/ref&gt;
&lt;ref name=&quot;9grid&quot;&gt;{{cite web |url=http://cm.bell-labs.com/wiki/plan9/9grid/ |title=9grid |work=[[Bell Labs]] | publisher =[[Lucent Technologies]] |accessdate= 2006-03-28}}&lt;/ref&gt;
&lt;ref name=&quot;9wm&quot;&gt;{{cite web |url=http://unauthorised.org/dhog/9wm.html |title=The 9wm Window Manager |work=9wm | accessdate =2012-01-02 |quote= 9wm is an X window manager which attempts to emulate the Plan 9 window manager 8-1/2 as far as possible within the constraints imposed by X.}}&lt;/ref&gt;
&lt;ref name=&quot;auth-paper&quot;&gt;{{cite web |url=http://9p.io/sys/doc/auth.html |title=Security in Plan 9 | first1 =R. |last1= Cox |first2= E. |last2= Grosse |first3= R. |last3=Pike |authorlink3=Rob Pike |first4= D. | last4 = Presotto |first5=S. |last5= Quinlan |work= Bell Labs |publisher= Lucent Technologies |accessdate = 2016-02-26}}&lt;/ref&gt;
&lt;ref name= &quot;auug-new-c-compiler&quot;&gt;{{cite journal |url= http://doc.cat-v.org/bell_labs/new_c_compilers/new_c_compiler.pdf | title = A new C Compiler |first =Ken |last =Thompson |authorlink=Ken Thompson |pages=31–41 |journal= Australian UNIX systems User Group Newsletter |volume= 13 |issue= 1 |publisher=[[AUUG]] |location= [[Kensington]], [[Australia|AU]] |date=February 1992 |accessdate=2011-12-25 |issn= 1035-7521}}&lt;/ref&gt;
&lt;ref name= &quot;creators&quot;&gt;{{cite press release |url= http://www.lucent.com/press/0795/950718.bla.html | title= From the inventors of UNIX system comes Plan 9 from Bell Labs |publisher= Lucent Technologies |date= 1995-07-18 }}{{dead link|date=August 2016|bot=medic}}{{cbignore|bot=medic}}&lt;/ref&gt;
&lt;ref name= &quot;design-paper&quot;&gt;{{cite web |url= http://9p.io/sys/doc/9.html | title= Plan 9 from Bell Labs | first1 =R. |last1=Pike |authorlink1=Rob Pike |first2=D. |last2=Presotto |first3= S. |last3= Dorward | first4 = B. | last4=Flandrena |first5=K. |last5=Thompson |authorlink5=Ken Thompson |first6=H. |last6=Trickey | first7 =P. |last7=Winterbottom |work=Bell Labs |publisher=Lucent Technologies |accessdate= 2016-02-26}}&lt;/ref&gt;
&lt;ref name= &quot;developers&quot;&gt;{{cite web |url= http://9p.io/sys/man/preface.html | title = Preface | edition = 2nd |last=McIlroy |first=Doug |date=Mar 1995 |work= Bell Labs |publisher= Lucent Technologies | accessdate = 2016-02-26}}&lt;/ref&gt;
&lt;ref name=&quot;4.4bsd&quot;&gt;{{cite conference |last1=Pendry |first1=Jan-Simon |last2=McKusick |first2=Marshall Kirk |title=Union Mounts in 4.4BSD-Lite |year=1995 |conference=Proc. Winter [[USENIX]] Conf. |url=http://www.usenix.org/publications/library/proceedings/neworl/full_papers/mckusick.ps}}&lt;/ref&gt;
&lt;ref name= &quot;distributed-system&quot;&gt;{{cite conference |citeseerx =10.1.1.41.9192 |title= Plan 9, A Distributed System | first1=Dave |last1=Presotto |first2=Rob |last2= Pike |authorlink2= Rob Pike |first3= Ken |last3 = Thompson | authorlink3 =Ken Thompson |last4=Trickey |first4=Howard |conference=Proc. Spring 1991 EurOpen Conference}}&lt;/ref&gt;
&lt;ref name= &quot;Dixon2004&quot;&gt;{{cite book |url= https://books.google.com/books?id=9b_vVPf53xcC&amp;pg=PA213 |title= Open source software law |first=Rod |last=Dixon |page=213 |year=2004 |publisher=[[Artech House]] |isbn = 978-1-58053-719-3 | accessdate = 2011-12-25}}&lt;/ref&gt;
&lt;ref name= &quot;docs-ape&quot;&gt;{{cite web |url= http://9p.io/sys/doc/ape.html |title= APE&amp;nbsp;– The ANSI/POSIX Environment |first= Howard |last= Trickey |work= Bell Labs | publisher= Lucent Technologies | accessdate = 2016-02-26}}&lt;/ref&gt;
&lt;ref name=&quot;firstpublic&quot;&gt;{{cite web |url=http://9fans.net/archive/1995/07/16| title=Announcement of the first release to general public | publisher = 9 fans | date = 1995-07-16}}&lt;/ref&gt;
&lt;ref name= &quot;gentoo&quot;&gt;{{cite web |url= http://soc.dev.gentoo.org/~rps/plan9/ |title= Plan 9 From Gentoo: Plan 9 Meets Gentoo |work=[[Gentoo Linux]] |accessdate=2011-12-01 }}&lt;/ref&gt;
&lt;ref name= &quot;glendix&quot;&gt;{{cite web |url=http://www.glendix.org/ |title= Glendix: Bringing the beauty of Plan 9 to Linux |accessdate=2011-12-01 }}&lt;/ref&gt;
&lt;ref name=&quot;harvey&quot;&gt;{{cite conference |first1=Álvaro |last1=Jurado |first2=Rafael |last2=Fernández |first3=David |last3=du Colombier |first4=Ron |last4=Minnich |first5=Aki |last5=Nyrhinen |first6=John |last6=Floren |title=Harvey |conference=USENIX ATC BOF session |url=http://harvey-os.org/docs/Harvey-Usenix-2015-ATC-BOF-slides.pdf}}&lt;/ref&gt;
&lt;ref name= &quot;HerbertJones2004&quot;&gt;{{cite book |chapterurl=https://books.google.com/books?id=O897whP-DYAC&amp;pg=PA211 | chapter =Real Time in a Real Operating System |first1=Sape J.  |last1=Mullender |first2=Pierre G.  |last2=Janson | title = Computer systems: theory, technology, and applications: a tribute to Roger Needham | editor1-first = Andrew J. |editor1-last=Herbert |editor2-first=Karen |editor2-last=Spärck Jones |editor2-link=Karen Spärck Jones |publisher=[[Springer Science+Business Media]] |isbn=978-0-387-20170-2 |date=2004-02-26 |page=211 |accessdate=2011-12-24 }}&lt;/ref&gt;
&lt;ref name= &quot;how-to-contribute&quot;&gt;{{cite web |url=http://9p.io/wiki/plan9/How_to_contribute/ | title = How to contribute |work=Bell Labs |publisher=Lucent Technologies |accessdate=2011-11-30 }}&lt;/ref&gt;
&lt;ref name=&quot;integrated&quot;&gt;{{cite conference |last1=Mirtchovski |first1=Andrey |first2=Rob |last2=Simmonds |first3=Ron |last3=Minnich |title=Plan 9—an integrated approach to grid computing |conference=Proc. 18th Int'l Parallel and Distributed Processing Symp. |year=2004 |publisher=IEEE |citeseerx=10.1.1.97.122}}&lt;/ref&gt;
&lt;ref name= &quot;intro-abstractions&quot;&gt;{{cite web |url=http://plan9.escet.urjc.es/who/nemo/9.intro.pdf |format=pdf | title = Introduction to OS abstractions using Plan 9 from Bell Labs |first=Francisco J.  |last=Ballesteros | publisher =[[Universidad Rey Juan Carlos]] |date= 2007-09-28 |archiveurl = https://web.archive.org/web/20100922172010/http://plan9.escet.urjc.es/who/nemo/9.intro.pdf |archivedate=2010-09-22 }}&lt;/ref&gt;
&lt;ref name= &quot;linuxemu&quot;&gt;{{cite web |url=http://9p.io/wiki/plan9/Linux_emulation/ |title= Linux emulation |work=Bell Labs |publisher=Lucent Technologies |accessdate= 2016-02-26}}&lt;/ref&gt;
&lt;ref name= &quot;Lunde1999&quot;&gt;{{cite book |url=https://books.google.com/books?id=Cn7jnk9WwZEC&amp;pg=PA466 |title= CJKV information processing |first=Ken |last=Lunde |publisher=[[O'Reilly Media]] |date=Jan 1999 |isbn = 978-1-56592-224-2 | page=466 |accessdate= 2011-12-23}}&lt;/ref&gt;
&lt;ref name=&quot;man4namespace&quot;&gt;{{man|4|namespace|Plan 9}}&lt;/ref&gt;
&lt;ref name=&quot;not_dead&quot;&gt;{{cite web |url=http://www.cs.unm.edu/~fastos/05meeting/PLAN9NOTDEADYET.pdf |format=PDF | title=Why Plan 9 is not dead yet And What we can learn from it |first=Ron |last=Minnich |work=[[Los Alamos National Laboratory]] |year=2005 |accessdate= 2016-02-26}}&lt;/ref&gt;
&lt;ref name=&quot;osnews-4th-edition-release&quot;&gt;{{cite web |url=http://www.osnews.com/story/1001/Bell_Labs_Releases_New_Version_of_Plan_9 |title=Bell Labs Releases New Version of Plan 9 |first=Eugenia | last =Loli-Queru |date=2002-04-29 |work=[[OSNews]] |accessdate= 2011-12-31}}&lt;/ref&gt;
&lt;ref name=&quot;opensources&quot;&gt;{{cite encyclopedia |title=The Linux edge |first=Linus |last=Torvalds |encyclopedia=Open Sources: Voices from the Open Source Revolution |year=1999 |publisher=O'Reilly |url=http://oreilly.com/catalog/opensources/book/linus.html |isbn=1-56592-582-3}}&lt;/ref&gt;
&lt;ref name=&quot;theregister-gpl-release&quot;&gt;{{cite web |url=http://www.theregister.co.uk/2014/02/14/plan_9_moves_to_gnu_space/ |title=Plan 9 moves out from Lucent licence space |first=Simon |last=Sharwood |date=2014-02-14 |work=[[TheRegister]] |accessdate=2014-04-20}}&lt;/ref&gt;
&lt;ref name=&quot;osnews-investigating&quot;&gt;{{cite web |url= http://www.osnews.com/story/15235/Investigating_the_Plan_9_Operating_System | title= Investigating the Plan 9 Operating System |first= Andrew | last = Hudson |date=2006-07-19 |work=[[OSNews]] |accessdate=2011-12-31}}&lt;/ref&gt;
&lt;ref name=&quot;raspinst&quot;&gt;{{cite web |url=http://elinux.org/Plan_9_on_Raspberry_Pi| title=How to install Plan 9 on a Raspberry Pi | publisher = eLinux | accessdate= 2014-11-16}}&lt;/ref&gt;
&lt;ref name=&quot;rasppi&quot;&gt;{{cite web|url=http://www.techradar.com/news/software/operating-systems/raspberry-pi-operating-systems-5-reviewed-and-rated-1147941 |title=Raspberry Pi operating systems: 5 reviewed and rated |first=David |last=Hayward |work=[[TechRadar]] |date=2013-05-09 |accessdate=2014-04-20 |deadurl=yes |archiveurl=https://web.archive.org/web/20130607040944/http://www.techradar.com/news/software/operating-systems/raspberry-pi-operating-systems-5-reviewed-and-rated-1147941 |archivedate=June 7, 2013 }}&lt;/ref&gt;
&lt;ref name= &quot;reinventing-unix&quot;&gt;{{cite journal |first= Brian |last= Hancock |title= Reinventing Unix: an introduction to the Plan 9 operating system |journal=Library Hi Tech |volume=21 |issue=4 |pages=471–76 |year = 2003 |publisher=MCB UP |doi=10.1108/07378830310509772}}&lt;/ref&gt;
&lt;ref name=&quot;roscoe&quot;&gt;{{cite thesis |first=Timothy |last=Roscoe |title=The Structure of a Multi-Service Operating System |type=Ph.D. |year=1995 |url=http://people.inf.ethz.ch/troscoe/pubs/UCAM-CL-TR-376.pdf |publisher=University of Cambridge |pages=22–23}}&lt;/ref&gt;
&lt;ref name= &quot;rutgers&quot;&gt;{{cite press release | url = http://www.vitanuova.com/solutions/grid/news/rutgers.pdf | format = PDF |title = Rutgers University Libraries Install Inferno Data Grid |publisher=[[Vita Nuova]] |date = 2004-05-12 |accessdate=2006-03-28}}&lt;/ref&gt;
&lt;ref name= &quot;staying-up-to-date&quot;&gt;{{cite web |url=http://cm.bell-labs.com/wiki/plan9/Staying_up_to_date/ |title = Staying up to date |work=Bell Labs |publisher=Lucent Technologies |accessdate= 2006-04-27}}&lt;/ref&gt;
&lt;ref name= &quot;taoup&quot;&gt;{{cite book |last= Raymond |first= Eric S. |authorlink=Eric S. Raymond |title= [[The Art of UNIX Programming]] |chapter=Plan 9: The Way the Future Was |chapter-url=http://catb.org/~esr/writings/taoup/html/plan9.html |publisher=[[Addison-Wesley]] |isbn=0-13-142901-9 |date=2003-09-17 |accessdate = 2007-05-07}}&lt;/ref&gt;
&lt;ref name=&quot;ubiquitous&quot;&gt;{{cite conference |last1=Ballesteros |first1=Francisco J. |first2=Gorka |last2=Guardiola |first3=Enrique |last3=Soriano |first4=Katia |last4=Leal Algara |title=Traditional systems can work well for pervasive applications. A case study: Plan 9 from Bell Labs becomes ubiquitous |conference=IEEE Intl' Conf. on Pervasive Computing and Communications |year=2005 |citeseerx=10.1.1.109.8131}}&lt;/ref&gt;
&lt;ref name= &quot;unix-plan9-command-translation&quot;&gt;{{cite web |url= http://9p.io/wiki/plan9/UNIX_to_Plan_9_command_translation/ |title= UNIX to Plan 9 command translation |work=Bell Labs |publisher = Lucent Technologies |accessdate=2011-12-02}}&lt;/ref&gt;
&lt;ref name= &quot;unix-spirit-set-free&quot;&gt;{{cite video | url = https://video.fosdem.org/2006/FOSDEM2006-plan9.avi | format = [[Audio Video Interleave|AVI]] | laysummary= http://cm.bell-labs.com/sources/contrib/uriel/slides/fosdem06/slides.pdf |title=The Unix Spirit set Free: Plan 9 from Bell Labs |first=Uriel M. |last=Pereira |publisher = [[FOSDEM]] |date= 2006 | accessdate = 2011-12-02}}&lt;/ref&gt;
&lt;ref name= &quot;use-of-namespaces&quot;&gt;{{cite web | url= http://9p.io/sys/doc/names.html | title = The Use of Name Spaces in Plan 9 | first1= R. |last1= Pike |author1link= Rob Pike |first2= D. | last2 = Presotto | first3 = K. |last3=Thompson |author3link= Ken Thompson |first4=H. |last4= Trickey |first5= P. |last5= Winterbottom |work= Bell Labs | accessdate= 2016-02-26}}&lt;/ref&gt;
&lt;ref name=&quot;usethis-interview-russ-cox&quot;&gt;{{cite web |url=http://russ.cox.usesthis.com/ |title= An interview with Russ Cox |date=2011-04-09 |work=The Setup | publisher = Uses this | accessdate= 2012-01-01}}&lt;/ref&gt;
&lt;ref name=&quot;utf8&quot;&gt;{{cite web |url= http://www.cl.cam.ac.uk/~mgk25/ucs/utf-8-history.txt |title= UTF-8 History | last = Pike |first=Rob |authorlink=Rob Pike |date=2003-04-30 |accessdate=2006-04-27}}&lt;/ref&gt;
&lt;ref name=&quot;valerie-aurora&quot;&gt;{{cite web |last=Valerie |first=Aurora |title= Union file systems: Implementations, part I |url=https://lwn.net/Articles/325369/ |work=[[LWN.net]] |date=2009-03-25 |accessdate= 2011-12-05}}&lt;/ref&gt;
&lt;ref name= &quot;vitanuova-grid&quot;&gt;{{cite press release | url = http://www.vitanuova.com/solutions/grid/news/evotecoai.pdf | format = PDF | title = Vita Nuova Supplies Inferno Grid to Evotec OAI | publisher = [[Vita Nuova]] | date =2004-05-18 | accessdate = 2006-03-28}}&lt;/ref&gt;
&lt;ref name=&quot;vx32&quot;&gt;{{cite conference |first1=Bryan |last1=Ford |first2=Russ |last2=Cox |title=Vx32: Lightweight, User-level Sandboxing on the x86 |year=2008 |conference=[[USENIX]] Annual Tech. Conf. |pages=293–306 |url=https://www.usenix.org/legacy/event/usenix08/tech/full_papers/ford/ford_html/index.html}}&lt;/ref&gt;
&lt;ref name=&quot;welch&quot;&gt;{{cite journal |last=Welch |first=Brent |title=A comparison of three distributed file system architectures: Vnode, Sprite, and Plan 9 |journal=Computing Systems |volume=7 |issue=2 |year=1994 |pages=175–199 |citeseerx=10.1.1.46.2817}}&lt;/ref&gt;
&lt;ref name=&quot;wmii&quot;&gt;{{cite web |url=http://wmii.suckless.org/ |title=window manager improved 2 |work = suckless.org | accessdate= 2012-01-02 |quote= &amp;#91;wmii&amp;#93; has a 9p filesystem interface and supports classic and tiling (acme-like) window management.}}&lt;/ref&gt;
&lt;ref name= &quot;york&quot;&gt;{{cite press release | url= http://www.vitanuova.com/solutions/grid/news/Yorkbiology.pdf | format = PDF |title= The University of York Department of Biology install Vita Nuova's Inferno Data Grid | publisher =[[Vita Nuova]] |date=2004-05-04 |accessdate= 2006-03-28}}&lt;/ref&gt;
}}

== External links ==
{{Commons category|Plan 9 from Bell Labs}}
* [http://9p.io/plan9/ Mirror] of official website.
* GPL [http://akaros.cs.berkeley.edu/files/ Source code] and [https://github.com/brho/plan9 git repo]
* [https://github.com/0intro/plan9 git mirror] of Plan 9 from Bell Labs repo.
* [http://9front.org 9front], a plan9 fork.
* [http://mail.9fans.net/listinfo/9fans 9fans], the Plan 9 [[mailing list]] hosted by http://9fans.net
* [http://ninetimes.cat-v.org Ninetimes] Plan 9, Inferno, Unix, and Bell Labs operating systems news
* {{freenode|plan9}}, the Plan 9 [[IRC]] channel hosted by [[freenode]]
* [http://cat-v.org/ Cat-v.org Random Contrarian Insurgent Organization], the Plan 9 user and developer community
* [http://www.glendix.org/ Glendix] Bringing the beauty of Plan9 to Linux.
* [https://9p.io/plan9/glenda.html Glenda, the Plan 9 bunny]

{{unix-like}}
{{Rob Pike navbox}}
{{FOSS}}

{{DEFAULTSORT:Plan 9 From Bell Labs}}
[[Category:Embedded operating systems]]
[[Category:Plan 9 from Bell Labs| ]]
[[Category:Computing platforms]]
[[Category:Distributed computing architecture]]
[[Category:Software projects]]
[[Category:1992 software]]
[[Category:ARM operating systems]]
[[Category:Free software operating systems]]
[[Category:Operating system distributions bootable from read-only media]]</text>
      <sha1>8yund8eaxy28rlqzsc9zcgqjn4x3tn4</sha1>
    </revision>
  </page>
</mediawiki>
